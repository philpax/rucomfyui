[
  {
    "name": "AlignYourStepsScheduler",
    "display_name": "AlignYourStepsScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_align_your_steps",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model_type": [
          []
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 10,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_type",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "BasicGuider",
    "display_name": "BasicGuider",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/guiders",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "conditioning"
      ],
      "optional": null
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GUIDER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "BasicScheduler",
    "display_name": "BasicScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "scheduler": [
          []
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "scheduler",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "BetaSamplingScheduler",
    "display_name": "BetaSamplingScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "alpha": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.6,
            "max": 50.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "beta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.6,
            "max": 50.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "steps",
        "alpha",
        "beta"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CFGGuider",
    "display_name": "CFGGuider",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/guiders",
    "input": {
      "required": {
        "cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "model": [
          "MODEL"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "positive",
        "negative",
        "cfg"
      ],
      "optional": null
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GUIDER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CFGZeroStar",
    "display_name": "CFGZeroStar",
    "description": "",
    "python_module": "comfy_extras.nodes_cfg",
    "category": "advanced/guidance",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "patched_model"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPLoader",
    "display_name": "Load CLIP",
    "description": "[Recipes]\n\nstable_diffusion: clip-l\nstable_cascade: clip-g\nsd3: t5 xxl/ clip-g / clip-l\nstable_audio: t5 base\nmochi: t5 xxl\ncosmos: old t5 xxl\nlumina2: gemma 2 2B\nwan: umt5 xxl\n hidream: llama-3.1 (Recommend) or t5",
    "python_module": "nodes",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "clip_name": [
          []
        ],
        "type": [
          []
        ]
      },
      "optional": {
        "device": [
          [],
          {
            "tooltip": null
          }
        ]
      }
    },
    "input_order": {
      "required": [
        "clip_name",
        "type"
      ],
      "optional": [
        "device"
      ]
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPMergeAdd",
    "display_name": "CLIPMergeAdd",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip1",
        "clip2"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPMergeSimple",
    "display_name": "CLIPMergeSimple",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip1",
        "clip2",
        "ratio"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPMergeSubtract",
    "display_name": "CLIPMergeSubtract",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip1",
        "clip2",
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPSave",
    "display_name": "CLIPSave",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "clip/ComfyUI"
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "CLIPSetLastLayer",
    "display_name": "CLIP Set Last Layer",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "tooltip": null,
            "default": -1,
            "max": -1,
            "min": -24,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "stop_at_clip_layer"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncode",
    "display_name": "CLIP Text Encode (Prompt)",
    "description": "Encodes a text prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images.",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP",
          {
            "tooltip": "The CLIP model used for encoding the text."
          }
        ],
        "text": [
          "STRING",
          {
            "tooltip": "The text to be encoded.",
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "text",
        "clip"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": [
      "A conditioning containing the embedded text used to guide the diffusion model."
    ]
  },
  {
    "name": "CLIPTextEncodeFlux",
    "display_name": "CLIPTextEncodeFlux",
    "description": "",
    "python_module": "comfy_extras.nodes_flux",
    "category": "advanced/conditioning/flux",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "clip_l": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "guidance": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.5,
            "max": 100.0,
            "min": 0.0,
            "step": 0.1
          }
        ],
        "t5xxl": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "clip_l",
        "t5xxl",
        "guidance"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeHiDream",
    "display_name": "CLIPTextEncodeHiDream",
    "description": "",
    "python_module": "comfy_extras.nodes_hidream",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "clip_g": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "clip_l": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "llama": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "t5xxl": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "clip_l",
        "clip_g",
        "t5xxl",
        "llama"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeHunyuanDiT",
    "display_name": "CLIPTextEncodeHunyuanDiT",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "bert": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "mt5xl": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "bert",
        "mt5xl"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeLumina2",
    "display_name": "CLIP Text Encode for Lumina2",
    "description": "Encodes a system prompt and a user prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images.",
    "python_module": "comfy_extras.nodes_lumina2",
    "category": "conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP",
          {
            "tooltip": "The CLIP model used for encoding the text."
          }
        ],
        "system_prompt": [
          [],
          {
            "tooltip": "Lumina2 provide two types of system prompts:Superior: You are an assistant designed to generate superior images with the superior degree of image-text alignment based on textual prompts or user prompts. Alignment: You are an assistant designed to generate high-quality images with the highest degree of image-text alignment based on textual prompts."
          }
        ],
        "user_prompt": [
          "STRING",
          {
            "tooltip": "The text to be encoded.",
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "system_prompt",
        "user_prompt",
        "clip"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": [
      "A conditioning containing the embedded text used to guide the diffusion model."
    ]
  },
  {
    "name": "CLIPTextEncodePixArtAlpha",
    "display_name": "CLIPTextEncodePixArtAlpha",
    "description": "Encodes text and sets the resolution conditioning for PixArt Alpha. Does not apply to PixArt Sigma.",
    "python_module": "comfy_extras.nodes_pixart",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "text": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "text",
        "clip"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeSD3",
    "display_name": "CLIPTextEncodeSD3",
    "description": "",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "clip_g": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "clip_l": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "empty_padding": [
          []
        ],
        "t5xxl": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "clip_l",
        "clip_g",
        "t5xxl",
        "empty_padding"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeSDXL",
    "display_name": "CLIPTextEncodeSDXL",
    "description": "",
    "python_module": "comfy_extras.nodes_clip_sdxl",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "crop_h": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0
          }
        ],
        "crop_w": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "target_height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "target_width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "text_g": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "text_l": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "width",
        "height",
        "crop_w",
        "crop_h",
        "target_width",
        "target_height",
        "text_g",
        "text_l"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeSDXLRefiner",
    "display_name": "CLIPTextEncodeSDXLRefiner",
    "description": "",
    "python_module": "comfy_extras.nodes_clip_sdxl",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "ascore": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 6.0,
            "max": 1000.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "clip": [
          "CLIP"
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "text": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "ascore",
        "width",
        "height",
        "text",
        "clip"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPVisionEncode",
    "display_name": "CLIP Vision Encode",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "crop": [
          []
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "image",
        "crop"
      ],
      "optional": null
    },
    "output": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPVisionLoader",
    "display_name": "Load CLIP Vision",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "clip_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_name"
      ],
      "optional": null
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "Canny",
    "display_name": "Canny",
    "description": "",
    "python_module": "comfy_extras.nodes_canny",
    "category": "image/preprocessors",
    "input": {
      "required": {
        "high_threshold": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.8,
            "max": 0.99,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "image": [
          "IMAGE"
        ],
        "low_threshold": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.4,
            "max": 0.99,
            "min": 0.01,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "low_threshold",
        "high_threshold"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CheckpointLoader",
    "display_name": "Load Checkpoint With Config (DEPRECATED)",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "ckpt_name": [
          []
        ],
        "config_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "config_name",
        "ckpt_name"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CheckpointLoaderSimple",
    "display_name": "Load Checkpoint",
    "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "ckpt_name": [
          [],
          {
            "tooltip": "The name of the checkpoint (model) to load."
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "ckpt_name"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": [
      "The model used for denoising latents.",
      "The CLIP model used for encoding text prompts.",
      "The VAE model used for encoding and decoding images to and from latent space."
    ]
  },
  {
    "name": "CheckpointSave",
    "display_name": "Save Checkpoint",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "checkpoints/ComfyUI"
          }
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "clip",
        "vae",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "CombineHooks2",
    "display_name": "Combine Hooks [2]",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/combine",
    "input": {
      "required": {},
      "optional": {
        "hooks_A": [
          "HOOKS"
        ],
        "hooks_B": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [],
      "optional": [
        "hooks_A",
        "hooks_B"
      ]
    },
    "output": [
      "HOOKS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOKS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CombineHooks4",
    "display_name": "Combine Hooks [4]",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/combine",
    "input": {
      "required": {},
      "optional": {
        "hooks_A": [
          "HOOKS"
        ],
        "hooks_B": [
          "HOOKS"
        ],
        "hooks_C": [
          "HOOKS"
        ],
        "hooks_D": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [],
      "optional": [
        "hooks_A",
        "hooks_B",
        "hooks_C",
        "hooks_D"
      ]
    },
    "output": [
      "HOOKS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOKS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CombineHooks8",
    "display_name": "Combine Hooks [8]",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/combine",
    "input": {
      "required": {},
      "optional": {
        "hooks_A": [
          "HOOKS"
        ],
        "hooks_B": [
          "HOOKS"
        ],
        "hooks_C": [
          "HOOKS"
        ],
        "hooks_D": [
          "HOOKS"
        ],
        "hooks_E": [
          "HOOKS"
        ],
        "hooks_F": [
          "HOOKS"
        ],
        "hooks_G": [
          "HOOKS"
        ],
        "hooks_H": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [],
      "optional": [
        "hooks_A",
        "hooks_B",
        "hooks_C",
        "hooks_D",
        "hooks_E",
        "hooks_F",
        "hooks_G",
        "hooks_H"
      ]
    },
    "output": [
      "HOOKS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOKS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningAverage",
    "display_name": "ConditioningAverage",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning_from": [
          "CONDITIONING"
        ],
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_to_strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning_to",
        "conditioning_from",
        "conditioning_to_strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningCombine",
    "display_name": "Conditioning (Combine)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning_1",
        "conditioning_2"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningConcat",
    "display_name": "Conditioning (Concat)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning_from": [
          "CONDITIONING"
        ],
        "conditioning_to": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning_to",
        "conditioning_from"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetArea",
    "display_name": "Conditioning (Set Area)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 64,
            "max": 16384,
            "min": 64,
            "step": 8
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 64,
            "max": 16384,
            "min": 64,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "width",
        "height",
        "x",
        "y",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetAreaPercentage",
    "display_name": "Conditioning (Set Area with Percentage)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "height": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "width": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "x": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "y": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "width",
        "height",
        "x",
        "y",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetAreaPercentageVideo",
    "display_name": "ConditioningSetAreaPercentageVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "height": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "temporal": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "width": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "x": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "y": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "z": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "width",
        "height",
        "temporal",
        "x",
        "y",
        "z",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetAreaStrength",
    "display_name": "ConditioningSetAreaStrength",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetDefaultCombine",
    "display_name": "Cond Set Default Combine",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/cond single",
    "input": {
      "required": {
        "cond": [
          "CONDITIONING"
        ],
        "cond_DEFAULT": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "hooks": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [
        "cond",
        "cond_DEFAULT"
      ],
      "optional": [
        "hooks"
      ]
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetMask",
    "display_name": "Conditioning (Set Mask)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "mask": [
          "MASK"
        ],
        "set_cond_area": [
          []
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "mask",
        "strength",
        "set_cond_area"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetProperties",
    "display_name": "Cond Set Props",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/cond single",
    "input": {
      "required": {
        "cond_NEW": [
          "CONDITIONING"
        ],
        "set_cond_area": [
          []
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "hooks": [
          "HOOKS"
        ],
        "mask": [
          "MASK"
        ],
        "timesteps": [
          "TIMESTEPS_RANGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "cond_NEW",
        "strength",
        "set_cond_area"
      ],
      "optional": [
        "mask",
        "hooks",
        "timesteps"
      ]
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetPropertiesAndCombine",
    "display_name": "Cond Set Props Combine",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/cond single",
    "input": {
      "required": {
        "cond": [
          "CONDITIONING"
        ],
        "cond_NEW": [
          "CONDITIONING"
        ],
        "set_cond_area": [
          []
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "hooks": [
          "HOOKS"
        ],
        "mask": [
          "MASK"
        ],
        "timesteps": [
          "TIMESTEPS_RANGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "cond",
        "cond_NEW",
        "strength",
        "set_cond_area"
      ],
      "optional": [
        "mask",
        "hooks",
        "timesteps"
      ]
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetTimestepRange",
    "display_name": "ConditioningSetTimestepRange",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "end": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "start": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "start",
        "end"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningStableAudio",
    "display_name": "ConditioningStableAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "conditioning",
    "input": {
      "required": {
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "seconds_start": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1000.0,
            "min": 0.0,
            "step": 0.1
          }
        ],
        "seconds_total": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 47.0,
            "max": 1000.0,
            "min": 0.0,
            "step": 0.1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "seconds_start",
        "seconds_total"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningTimestepsRange",
    "display_name": "Timesteps Range",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks",
    "input": {
      "required": {
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "start_percent",
        "end_percent"
      ],
      "optional": null
    },
    "output": [
      "TIMESTEPS_RANGE",
      "TIMESTEPS_RANGE",
      "TIMESTEPS_RANGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "TIMESTEPS_RANGE",
      "BEFORE_RANGE",
      "AFTER_RANGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningZeroOut",
    "display_name": "ConditioningZeroOut",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetApply",
    "display_name": "Apply ControlNet (OLD)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "control_net",
        "image",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetApplyAdvanced",
    "display_name": "Apply ControlNet",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "image": [
          "IMAGE"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "vae": [
          "VAE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "control_net",
        "image",
        "strength",
        "start_percent",
        "end_percent"
      ],
      "optional": [
        "vae"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetApplySD3",
    "display_name": "Apply Controlnet with VAE",
    "description": "",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "image": [
          "IMAGE"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "control_net",
        "vae",
        "image",
        "strength",
        "start_percent",
        "end_percent"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetInpaintingAliMamaApply",
    "display_name": "ControlNetInpaintingAliMamaApply",
    "description": "",
    "python_module": "comfy_extras.nodes_controlnet",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "control_net",
        "vae",
        "image",
        "mask",
        "strength",
        "start_percent",
        "end_percent"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetLoader",
    "display_name": "Load ControlNet Model",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "control_net_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "control_net_name"
      ],
      "optional": null
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CosmosImageToVideoLatent",
    "display_name": "CosmosImageToVideoLatent",
    "description": "",
    "python_module": "comfy_extras.nodes_cosmos",
    "category": "conditioning/inpaint",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 704,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 121,
            "max": 16384,
            "min": 1,
            "step": 8
          }
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1280,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": {
        "end_image": [
          "IMAGE"
        ],
        "start_image": [
          "IMAGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "vae",
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": [
        "start_image",
        "end_image"
      ]
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CreateHookKeyframe",
    "display_name": "Create Hook Keyframe",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/scheduling",
    "input": {
      "required": {
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength_mult": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": -20.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "prev_hook_kf": [
          "HOOK_KEYFRAMES"
        ]
      }
    },
    "input_order": {
      "required": [
        "strength_mult",
        "start_percent"
      ],
      "optional": [
        "prev_hook_kf"
      ]
    },
    "output": [
      "HOOK_KEYFRAMES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOK_KF"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CreateHookKeyframesFromFloats",
    "display_name": "Create Hook Keyframes From Floats",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/scheduling",
    "input": {
      "required": {
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "floats_strength": [
          "FLOATS",
          {
            "tooltip": null
          }
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_hook_kf": [
          "HOOK_KEYFRAMES"
        ]
      }
    },
    "input_order": {
      "required": [
        "floats_strength",
        "start_percent",
        "end_percent",
        "print_keyframes"
      ],
      "optional": [
        "prev_hook_kf"
      ]
    },
    "output": [
      "HOOK_KEYFRAMES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOK_KF"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CreateHookKeyframesInterpolated",
    "display_name": "Create Hook Keyframes Interp.",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/scheduling",
    "input": {
      "required": {
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "interpolation": [
          []
        ],
        "keyframes_count": [
          "INT",
          {
            "tooltip": null,
            "default": 5,
            "max": 100,
            "min": 2,
            "step": 1
          }
        ],
        "print_keyframes": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength_end": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength_start": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": {
        "prev_hook_kf": [
          "HOOK_KEYFRAMES"
        ]
      }
    },
    "input_order": {
      "required": [
        "strength_start",
        "strength_end",
        "interpolation",
        "start_percent",
        "end_percent",
        "keyframes_count",
        "print_keyframes"
      ],
      "optional": [
        "prev_hook_kf"
      ]
    },
    "output": [
      "HOOK_KEYFRAMES"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOK_KF"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CreateHookLora",
    "display_name": "Create Hook LoRA",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/create",
    "input": {
      "required": {
        "lora_name": [
          []
        ],
        "strength_clip": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": -20.0,
            "step": 0.01
          }
        ],
        "strength_model": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": -20.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "prev_hooks": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [
        "lora_name",
        "strength_model",
        "strength_clip"
      ],
      "optional": [
        "prev_hooks"
      ]
    },
    "output": [
      "HOOKS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOKS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CreateHookLoraModelOnly",
    "display_name": "Create Hook LoRA (MO)",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/create",
    "input": {
      "required": {
        "lora_name": [
          []
        ],
        "strength_model": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": -20.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "prev_hooks": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [
        "lora_name",
        "strength_model"
      ],
      "optional": [
        "prev_hooks"
      ]
    },
    "output": [
      "HOOKS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOKS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CreateHookModelAsLora",
    "display_name": "Create Hook Model as LoRA",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/create",
    "input": {
      "required": {
        "ckpt_name": [
          []
        ],
        "strength_clip": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": -20.0,
            "step": 0.01
          }
        ],
        "strength_model": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": -20.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "prev_hooks": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [
        "ckpt_name",
        "strength_model",
        "strength_clip"
      ],
      "optional": [
        "prev_hooks"
      ]
    },
    "output": [
      "HOOKS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOKS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CreateHookModelAsLoraModelOnly",
    "display_name": "Create Hook Model as LoRA (MO)",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/create",
    "input": {
      "required": {
        "ckpt_name": [
          []
        ],
        "strength_model": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": -20.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "prev_hooks": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [
        "ckpt_name",
        "strength_model"
      ],
      "optional": [
        "prev_hooks"
      ]
    },
    "output": [
      "HOOKS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOKS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CreateVideo",
    "display_name": "Create Video",
    "description": "Create a video from images.",
    "python_module": "comfy_extras.nodes_video",
    "category": "image/video",
    "input": {
      "required": {
        "fps": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 30.0,
            "max": 120.0,
            "min": 1.0,
            "step": 1.0
          }
        ],
        "images": [
          "IMAGE",
          {
            "tooltip": "The images to create a video from."
          }
        ]
      },
      "optional": {
        "audio": [
          "AUDIO",
          {
            "tooltip": "The audio to add to the video."
          }
        ]
      }
    },
    "input_order": {
      "required": [
        "images",
        "fps"
      ],
      "optional": [
        "audio"
      ]
    },
    "output": [
      "VIDEO"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VIDEO"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CropMask",
    "display_name": "CropMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "mask": [
          "MASK"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask",
        "x",
        "y",
        "width",
        "height"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DiffControlNetLoader",
    "display_name": "Load ControlNet Model (diff)",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "control_net_name": [
          []
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "control_net_name"
      ],
      "optional": null
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DiffusersLoader",
    "display_name": "DiffusersLoader",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/loaders/deprecated",
    "input": {
      "required": {
        "model_path": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_path"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DisableNoise",
    "display_name": "DisableNoise",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/noise",
    "input": {
      "required": {},
      "optional": null
    },
    "input_order": {
      "required": [],
      "optional": null
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DualCFGGuider",
    "display_name": "DualCFGGuider",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/guiders",
    "input": {
      "required": {
        "cfg_cond2_negative": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "cfg_conds": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "cond1": [
          "CONDITIONING"
        ],
        "cond2": [
          "CONDITIONING"
        ],
        "model": [
          "MODEL"
        ],
        "negative": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "cond1",
        "cond2",
        "negative",
        "cfg_conds",
        "cfg_cond2_negative"
      ],
      "optional": null
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GUIDER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DualCLIPLoader",
    "display_name": "DualCLIPLoader",
    "description": "[Recipes]\n\nsdxl: clip-l, clip-g\nsd3: clip-l, clip-g / clip-l, t5 / clip-g, t5\nflux: clip-l, t5\nhidream: at least one of t5 or llama, recommended t5 and llama",
    "python_module": "nodes",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "clip_name1": [
          []
        ],
        "clip_name2": [
          []
        ],
        "type": [
          []
        ]
      },
      "optional": {
        "device": [
          [],
          {
            "tooltip": null
          }
        ]
      }
    },
    "input_order": {
      "required": [
        "clip_name1",
        "clip_name2",
        "type"
      ],
      "optional": [
        "device"
      ]
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyCosmosLatentVideo",
    "display_name": "EmptyCosmosLatentVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_cosmos",
    "category": "latent/video",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 704,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 121,
            "max": 16384,
            "min": 1,
            "step": 8
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1280,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyHunyuanLatentVideo",
    "display_name": "EmptyHunyuanLatentVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan",
    "category": "latent/video",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 480,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 25,
            "max": 16384,
            "min": 1,
            "step": 4
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 848,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyImage",
    "display_name": "EmptyImage",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "color": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "display": "color",
            "max": 16777215,
            "min": 0,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "batch_size",
        "color"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyLTXVLatentVideo",
    "display_name": "EmptyLTXVLatentVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_lt",
    "category": "latent/video/ltxv",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 64,
            "step": 32
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 97,
            "max": 16384,
            "min": 1,
            "step": 8
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 768,
            "max": 16384,
            "min": 64,
            "step": 32
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyLatentAudio",
    "display_name": "EmptyLatentAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "latent/audio",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": "The number of latent images in the batch.",
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "seconds": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 47.6,
            "max": 1000.0,
            "min": 1.0,
            "step": 0.1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "seconds",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyLatentHunyuan3Dv2",
    "display_name": "EmptyLatentHunyuan3Dv2",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan3d",
    "category": "latent/3d",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": "The number of latent images in the batch.",
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "resolution": [
          "INT",
          {
            "tooltip": null,
            "default": 3072,
            "max": 8192,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "resolution",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyLatentImage",
    "display_name": "Empty Latent Image",
    "description": "Create a new batch of empty latent images to be denoised via sampling.",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": "The number of latent images in the batch.",
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": "The height of the latent images in pixels.",
            "default": 512,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": "The width of the latent images in pixels.",
            "default": 512,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": [
      "The empty latent image batch."
    ]
  },
  {
    "name": "EmptyMochiLatentVideo",
    "display_name": "EmptyMochiLatentVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_mochi",
    "category": "latent/video",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 480,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 25,
            "max": 16384,
            "min": 7,
            "step": 6
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 848,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptySD3LatentImage",
    "display_name": "EmptySD3LatentImage",
    "description": "",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "latent/sd3",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ExponentialScheduler",
    "display_name": "ExponentialScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 14.614642,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0291675,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "sigma_max",
        "sigma_min"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FeatherMask",
    "display_name": "FeatherMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "bottom": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "mask": [
          "MASK"
        ],
        "right": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "top": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask",
        "left",
        "top",
        "right",
        "bottom"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FlipSigmas",
    "display_name": "FlipSigmas",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/sigmas",
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sigmas"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FluxDisableGuidance",
    "display_name": "FluxDisableGuidance",
    "description": "This node completely disables the guidance embed on Flux and Flux like models",
    "python_module": "comfy_extras.nodes_flux",
    "category": "advanced/conditioning/flux",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FluxGuidance",
    "display_name": "FluxGuidance",
    "description": "",
    "python_module": "comfy_extras.nodes_flux",
    "category": "advanced/conditioning/flux",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "guidance": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.5,
            "max": 100.0,
            "min": 0.0,
            "step": 0.1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "guidance"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FreeU",
    "display_name": "FreeU",
    "description": "",
    "python_module": "comfy_extras.nodes_freelunch",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "b1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.1,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.2,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "s1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.9,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.2,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "b1",
        "b2",
        "s1",
        "s2"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FreeU_V2",
    "display_name": "FreeU_V2",
    "description": "",
    "python_module": "comfy_extras.nodes_freelunch",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "b1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.3,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.4,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "s1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.9,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.2,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "b1",
        "b2",
        "s1",
        "s2"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GITSScheduler",
    "display_name": "GITSScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_gits",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "coeff": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.2,
            "max": 1.5,
            "min": 0.8,
            "step": 0.05
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 10,
            "max": 1000,
            "min": 2
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "coeff",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GLIGENLoader",
    "display_name": "GLIGENLoader",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "gligen_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "gligen_name"
      ],
      "optional": null
    },
    "output": [
      "GLIGEN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GLIGEN"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GLIGENTextBoxApply",
    "display_name": "GLIGENTextBoxApply",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/gligen",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "conditioning_to": [
          "CONDITIONING"
        ],
        "gligen_textbox_model": [
          "GLIGEN"
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 64,
            "max": 16384,
            "min": 8,
            "step": 8
          }
        ],
        "text": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 64,
            "max": 16384,
            "min": 8,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning_to",
        "clip",
        "gligen_textbox_model",
        "text",
        "width",
        "height",
        "x",
        "y"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GetVideoComponents",
    "display_name": "Get Video Components",
    "description": "Extracts all components from a video: frames, audio, and framerate.",
    "python_module": "comfy_extras.nodes_video",
    "category": "image/video",
    "input": {
      "required": {
        "video": [
          "VIDEO",
          {
            "tooltip": "The video to extract components from."
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "video"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "AUDIO",
      "FLOAT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "images",
      "audio",
      "fps"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GrowMask",
    "display_name": "GrowMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "expand": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": -16384,
            "step": 1
          }
        ],
        "mask": [
          "MASK"
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask",
        "expand",
        "tapered_corners"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "Hunyuan3Dv2Conditioning",
    "display_name": "Hunyuan3Dv2Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan3d",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision_output"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "Hunyuan3Dv2ConditioningMultiView",
    "display_name": "Hunyuan3Dv2ConditioningMultiView",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan3d",
    "category": "conditioning/video_models",
    "input": {
      "required": {},
      "optional": {
        "back": [
          "CLIP_VISION_OUTPUT"
        ],
        "front": [
          "CLIP_VISION_OUTPUT"
        ],
        "left": [
          "CLIP_VISION_OUTPUT"
        ],
        "right": [
          "CLIP_VISION_OUTPUT"
        ]
      }
    },
    "input_order": {
      "required": [],
      "optional": [
        "front",
        "left",
        "back",
        "right"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "HunyuanImageToVideo",
    "display_name": "HunyuanImageToVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "guidance_type": [
          []
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 480,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 53,
            "max": 16384,
            "min": 1,
            "step": 4
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 848,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": {
        "start_image": [
          "IMAGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "vae",
        "width",
        "height",
        "length",
        "batch_size",
        "guidance_type"
      ],
      "optional": [
        "start_image"
      ]
    },
    "output": [
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "HyperTile",
    "display_name": "HyperTile",
    "description": "",
    "python_module": "comfy_extras.nodes_hypertile",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "max_depth": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 10,
            "min": 0
          }
        ],
        "model": [
          "MODEL"
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ],
        "swap_size": [
          "INT",
          {
            "tooltip": null,
            "default": 2,
            "max": 128,
            "min": 1
          }
        ],
        "tile_size": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 2048,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "tile_size",
        "swap_size",
        "max_depth",
        "scale_depth"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "HypernetworkLoader",
    "display_name": "HypernetworkLoader",
    "description": "",
    "python_module": "comfy_extras.nodes_hypernetwork",
    "category": "loaders",
    "input": {
      "required": {
        "hypernetwork_name": [
          []
        ],
        "model": [
          "MODEL"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "hypernetwork_name",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageBatch",
    "display_name": "Batch Images",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image1",
        "image2"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageBlend",
    "display_name": "Image Blend",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "blend_factor": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blend_mode": [
          []
        ],
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image1",
        "image2",
        "blend_factor",
        "blend_mode"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageBlur",
    "display_name": "Image Blur",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "blur_radius": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 31,
            "min": 1,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "sigma": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.1,
            "step": 0.1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "blur_radius",
        "sigma"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageColorToMask",
    "display_name": "ImageColorToMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "color": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "display": "color",
            "max": 16777215,
            "min": 0,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "color"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageCompositeMasked",
    "display_name": "ImageCompositeMasked",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "image",
    "input": {
      "required": {
        "destination": [
          "IMAGE"
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ],
        "source": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "input_order": {
      "required": [
        "destination",
        "source",
        "x",
        "y",
        "resize_source"
      ],
      "optional": [
        "mask"
      ]
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageCrop",
    "display_name": "Image Crop",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/transform",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "width",
        "height",
        "x",
        "y"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageFromBatch",
    "display_name": "ImageFromBatch",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/batch",
    "input": {
      "required": {
        "batch_index": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 4095,
            "min": 0
          }
        ],
        "image": [
          "IMAGE"
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "batch_index",
        "length"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageInvert",
    "display_name": "Invert Image",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageOnlyCheckpointLoader",
    "display_name": "Image Only Checkpoint Loader (img2vid model)",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "loaders/video_models",
    "input": {
      "required": {
        "ckpt_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "ckpt_name"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageOnlyCheckpointSave",
    "display_name": "ImageOnlyCheckpointSave",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "checkpoints/ComfyUI"
          }
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "clip_vision",
        "vae",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "ImagePadForOutpaint",
    "display_name": "Pad Image for Outpainting",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "bottom": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "tooltip": null,
            "default": 40,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "left": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "left",
        "top",
        "right",
        "bottom",
        "feathering"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageQuantize",
    "display_name": "Image Quantize",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "colors": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 256,
            "min": 1,
            "step": 1
          }
        ],
        "dither": [
          []
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "colors",
        "dither"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageRGBToYUV",
    "display_name": "ImageRGBToYUV",
    "description": "",
    "python_module": "comfy_extras.nodes_morphology",
    "category": "image/batch",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "IMAGE",
      "IMAGE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "Y",
      "U",
      "V"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageScale",
    "display_name": "Upscale Image",
    "description": "",
    "python_module": "nodes",
    "category": "image/upscaling",
    "input": {
      "required": {
        "crop": [
          []
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          []
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "upscale_method",
        "width",
        "height",
        "crop"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageScaleBy",
    "display_name": "Upscale Image By",
    "description": "",
    "python_module": "nodes",
    "category": "image/upscaling",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale_by": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 8.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "upscale_method": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "upscale_method",
        "scale_by"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageScaleToTotalPixels",
    "display_name": "Scale Image to Total Pixels",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/upscaling",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "megapixels": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 16.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "upscale_method": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "upscale_method",
        "megapixels"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageSharpen",
    "display_name": "Image Sharpen",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "alpha": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 5.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "image": [
          "IMAGE"
        ],
        "sharpen_radius": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 31,
            "min": 1,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.1,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "sharpen_radius",
        "sigma",
        "alpha"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageToMask",
    "display_name": "Convert Image to Mask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "channel": [
          []
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "channel"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageUpscaleWithModel",
    "display_name": "Upscale Image (using Model)",
    "description": "",
    "python_module": "comfy_extras.nodes_upscale_model",
    "category": "image/upscaling",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_model": [
          "UPSCALE_MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "upscale_model",
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageYUVToRGB",
    "display_name": "ImageYUVToRGB",
    "description": "",
    "python_module": "comfy_extras.nodes_morphology",
    "category": "image/batch",
    "input": {
      "required": {
        "U": [
          "IMAGE"
        ],
        "V": [
          "IMAGE"
        ],
        "Y": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "Y",
        "U",
        "V"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "InpaintModelConditioning",
    "display_name": "InpaintModelConditioning",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/inpaint",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "noise_mask": [
          "BOOLEAN",
          {
            "tooltip": "Add a noise mask to the latent so sampling will only happen within the mask. Might improve results or completely break things depending on the model.",
            "default": true
          }
        ],
        "pixels": [
          "IMAGE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "pixels",
        "mask",
        "noise_mask"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "InstructPixToPixConditioning",
    "display_name": "InstructPixToPixConditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_ip2p",
    "category": "conditioning/instructpix2pix",
    "input": {
      "required": {
        "negative": [
          "CONDITIONING"
        ],
        "pixels": [
          "IMAGE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "pixels"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "InvertMask",
    "display_name": "InvertMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "JoinImageWithAlpha",
    "display_name": "Join Image with Alpha",
    "description": "",
    "python_module": "comfy_extras.nodes_compositing",
    "category": "mask/compositing",
    "input": {
      "required": {
        "alpha": [
          "MASK"
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "alpha"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "KSampler",
    "display_name": "KSampler",
    "description": "Uses the provided model, positive and negative conditioning to denoise the latent image.",
    "python_module": "nodes",
    "category": "sampling",
    "input": {
      "required": {
        "cfg": [
          "FLOAT",
          {
            "tooltip": "The Classifier-Free Guidance scale balances creativity and adherence to the prompt. Higher values result in images more closely matching the prompt however too high values will negatively impact quality.",
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "tooltip": "The amount of denoising applied, lower values will maintain the structure of the initial image allowing for image to image sampling.",
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "latent_image": [
          "LATENT",
          {
            "tooltip": "The latent image to denoise."
          }
        ],
        "model": [
          "MODEL",
          {
            "tooltip": "The model used for denoising the input latent."
          }
        ],
        "negative": [
          "CONDITIONING",
          {
            "tooltip": "The conditioning describing the attributes you want to exclude from the image."
          }
        ],
        "positive": [
          "CONDITIONING",
          {
            "tooltip": "The conditioning describing the attributes you want to include in the image."
          }
        ],
        "sampler_name": [
          [],
          {
            "tooltip": "The algorithm used when sampling, this can affect the quality, speed, and style of the generated output."
          }
        ],
        "scheduler": [
          [],
          {
            "tooltip": "The scheduler controls how noise is gradually removed to form the image."
          }
        ],
        "seed": [
          "INT",
          {
            "tooltip": "The random seed used for creating the noise.",
            "default": 0,
            "max": 18446744073709551615,
            "min": 0
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": "The number of steps used in the denoising process.",
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "seed",
        "steps",
        "cfg",
        "sampler_name",
        "scheduler",
        "positive",
        "negative",
        "latent_image",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": [
      "The denoised latent."
    ]
  },
  {
    "name": "KSamplerAdvanced",
    "display_name": "KSampler (Advanced)",
    "description": "",
    "python_module": "nodes",
    "category": "sampling",
    "input": {
      "required": {
        "add_noise": [
          []
        ],
        "cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "end_at_step": [
          "INT",
          {
            "tooltip": null,
            "default": 10000,
            "max": 10000,
            "min": 0
          }
        ],
        "latent_image": [
          "LATENT"
        ],
        "model": [
          "MODEL"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "noise_seed": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 18446744073709551615,
            "min": 0
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "return_with_leftover_noise": [
          []
        ],
        "sampler_name": [
          []
        ],
        "scheduler": [
          []
        ],
        "start_at_step": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 10000,
            "min": 0
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "add_noise",
        "noise_seed",
        "steps",
        "cfg",
        "sampler_name",
        "scheduler",
        "positive",
        "negative",
        "latent_image",
        "start_at_step",
        "end_at_step",
        "return_with_leftover_noise"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "KSamplerSelect",
    "display_name": "KSamplerSelect",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "sampler_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sampler_name"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "KarrasScheduler",
    "display_name": "KarrasScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "rho": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 7.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 14.614642,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0291675,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "sigma_max",
        "sigma_min",
        "rho"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LTXVAddGuide",
    "display_name": "LTXVAddGuide",
    "description": "",
    "python_module": "comfy_extras.nodes_lt",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "frame_idx": [
          "INT",
          {
            "tooltip": "Frame index to start the conditioning at. For single-frame images or videos with 1-8 frames, any frame_idx value is acceptable. For videos with 9+ frames, frame_idx must be divisible by 8, otherwise it will be rounded down to the nearest multiple of 8. Negative values are counted from the end of the video.",
            "default": 0,
            "max": 9999,
            "min": -9999
          }
        ],
        "image": [
          "IMAGE",
          {
            "tooltip": "Image or video to condition the latent video on. Must be 8*n + 1 frames.If the video is not 8*n + 1 frames, it will be cropped to the nearest 8*n + 1 frames."
          }
        ],
        "latent": [
          "LATENT"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "latent",
        "image",
        "frame_idx",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LTXVConditioning",
    "display_name": "LTXVConditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_lt",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "frame_rate": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 25.0,
            "max": 1000.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "frame_rate"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LTXVCropGuides",
    "display_name": "LTXVCropGuides",
    "description": "",
    "python_module": "comfy_extras.nodes_lt",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "latent": [
          "LATENT"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "latent"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LTXVImgToVideo",
    "display_name": "LTXVImgToVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_lt",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 64,
            "step": 32
          }
        ],
        "image": [
          "IMAGE"
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 97,
            "max": 16384,
            "min": 9,
            "step": 8
          }
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0
          }
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 768,
            "max": 16384,
            "min": 64,
            "step": 32
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "image",
        "width",
        "height",
        "length",
        "batch_size",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LTXVPreprocess",
    "display_name": "LTXVPreprocess",
    "description": "",
    "python_module": "comfy_extras.nodes_lt",
    "category": "image",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "img_compression": [
          "INT",
          {
            "tooltip": "Amount of compression to apply on image.",
            "default": 35,
            "max": 100,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "img_compression"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "output_image"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LTXVScheduler",
    "display_name": "LTXVScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_lt",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "base_shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.95,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "max_shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 2.05,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ],
        "stretch": [
          "BOOLEAN",
          {
            "tooltip": "Stretch the sigmas to be in the range [terminal, 1].",
            "default": true
          }
        ],
        "terminal": [
          "FLOAT",
          {
            "tooltip": "The terminal value of the sigmas after stretching.",
            "default": 0.1,
            "max": 0.99,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "input_order": {
      "required": [
        "steps",
        "max_shift",
        "base_shift",
        "stretch",
        "terminal"
      ],
      "optional": [
        "latent"
      ]
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LaplaceScheduler",
    "display_name": "LaplaceScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "beta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 10.0,
            "min": 0.0,
            "round": false,
            "step": 0.1
          }
        ],
        "mu": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 10.0,
            "min": -10.0,
            "round": false,
            "step": 0.1
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 14.614642,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0291675,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "sigma_max",
        "sigma_min",
        "mu",
        "beta"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentAdd",
    "display_name": "LatentAdd",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples1",
        "samples2"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentApplyOperation",
    "display_name": "LatentApplyOperation",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced/operations",
    "input": {
      "required": {
        "operation": [
          "LATENT_OPERATION"
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "operation"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentApplyOperationCFG",
    "display_name": "LatentApplyOperationCFG",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced/operations",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "operation": [
          "LATENT_OPERATION"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "operation"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentBatch",
    "display_name": "LatentBatch",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/batch",
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples1",
        "samples2"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentBatchSeedBehavior",
    "display_name": "LatentBatchSeedBehavior",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "seed_behavior": [
          [],
          {
            "tooltip": null,
            "default": "fixed"
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "seed_behavior"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentComposite",
    "display_name": "Latent Composite",
    "description": "",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "feather": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "samples_from": [
          "LATENT"
        ],
        "samples_to": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples_to",
        "samples_from",
        "x",
        "y",
        "feather"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentCompositeMasked",
    "display_name": "LatentCompositeMasked",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "latent",
    "input": {
      "required": {
        "destination": [
          "LATENT"
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ],
        "source": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "input_order": {
      "required": [
        "destination",
        "source",
        "x",
        "y",
        "resize_source"
      ],
      "optional": [
        "mask"
      ]
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentCrop",
    "display_name": "Crop Latent",
    "description": "",
    "python_module": "nodes",
    "category": "latent/transform",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 64,
            "step": 8
          }
        ],
        "samples": [
          "LATENT"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 64,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "width",
        "height",
        "x",
        "y"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentFlip",
    "display_name": "Flip Latent",
    "description": "",
    "python_module": "nodes",
    "category": "latent/transform",
    "input": {
      "required": {
        "flip_method": [
          []
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "flip_method"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentFromBatch",
    "display_name": "Latent From Batch",
    "description": "",
    "python_module": "nodes",
    "category": "latent/batch",
    "input": {
      "required": {
        "batch_index": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 63,
            "min": 0
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 64,
            "min": 1
          }
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "batch_index",
        "length"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentInterpolate",
    "display_name": "LatentInterpolate",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples1",
        "samples2",
        "ratio"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentMultiply",
    "display_name": "LatentMultiply",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentOperationSharpen",
    "display_name": "LatentOperationSharpen",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced/operations",
    "input": {
      "required": {
        "alpha": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.1,
            "max": 5.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "sharpen_radius": [
          "INT",
          {
            "tooltip": null,
            "default": 9,
            "max": 31,
            "min": 1,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.1,
            "step": 0.1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sharpen_radius",
        "sigma",
        "alpha"
      ],
      "optional": null
    },
    "output": [
      "LATENT_OPERATION"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT_OPERATION"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentOperationTonemapReinhard",
    "display_name": "LatentOperationTonemapReinhard",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced/operations",
    "input": {
      "required": {
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "LATENT_OPERATION"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT_OPERATION"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentRotate",
    "display_name": "Rotate Latent",
    "description": "",
    "python_module": "nodes",
    "category": "latent/transform",
    "input": {
      "required": {
        "rotation": [
          []
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "rotation"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentSubtract",
    "display_name": "LatentSubtract",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples1",
        "samples2"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentUpscale",
    "display_name": "Upscale Latent",
    "description": "",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "crop": [
          []
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          []
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "upscale_method",
        "width",
        "height",
        "crop"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentUpscaleBy",
    "display_name": "Upscale Latent By",
    "description": "",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "scale_by": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.5,
            "max": 8.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "upscale_method": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "upscale_method",
        "scale_by"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "Load3D",
    "display_name": "Load 3D",
    "description": "",
    "python_module": "comfy_extras.nodes_load_3d",
    "category": "3d",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 4096,
            "min": 1,
            "step": 1
          }
        ],
        "image": [
          "LOAD_3D",
          {
            "tooltip": null
          }
        ],
        "model_file": [
          [],
          {
            "tooltip": null
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 4096,
            "min": 1,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_file",
        "image",
        "width",
        "height"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING",
      "IMAGE",
      "IMAGE",
      "LOAD3D_CAMERA"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "image",
      "mask",
      "mesh_path",
      "normal",
      "lineart",
      "camera_info"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "Load3DAnimation",
    "display_name": "Load 3D - Animation",
    "description": "",
    "python_module": "comfy_extras.nodes_load_3d",
    "category": "3d",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 4096,
            "min": 1,
            "step": 1
          }
        ],
        "image": [
          "LOAD_3D_ANIMATION",
          {
            "tooltip": null
          }
        ],
        "model_file": [
          [],
          {
            "tooltip": null
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 4096,
            "min": 1,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_file",
        "image",
        "width",
        "height"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK",
      "STRING",
      "IMAGE",
      "LOAD3D_CAMERA"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "image",
      "mask",
      "mesh_path",
      "normal",
      "camera_info"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoadAudio",
    "display_name": "LoadAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "audio",
    "input": {
      "required": {
        "audio": [
          [],
          {
            "tooltip": null,
            "audio_upload": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "audio"
      ],
      "optional": null
    },
    "output": [
      "AUDIO"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AUDIO"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoadImage",
    "display_name": "Load Image",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "image": [
          [],
          {
            "tooltip": null,
            "image_upload": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoadImageMask",
    "display_name": "Load Image (as Mask)",
    "description": "",
    "python_module": "nodes",
    "category": "mask",
    "input": {
      "required": {
        "channel": [
          []
        ],
        "image": [
          [],
          {
            "tooltip": null,
            "image_upload": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "channel"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoadImageOutput",
    "display_name": "Load Image (from Outputs)",
    "description": "Load an image from the output folder. When the refresh button is clicked, the node will update the image list and automatically select the first image, allowing for easy iteration.",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "image": [
          "COMBO",
          {
            "tooltip": null,
            "image_upload": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoadVideo",
    "display_name": "Load Video",
    "description": "",
    "python_module": "comfy_extras.nodes_video",
    "category": "image/video",
    "input": {
      "required": {
        "file": [
          [],
          {
            "tooltip": null
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "file"
      ],
      "optional": null
    },
    "output": [
      "VIDEO"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VIDEO"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoraLoader",
    "display_name": "Load LoRA",
    "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "clip": [
          "CLIP",
          {
            "tooltip": "The CLIP model the LoRA will be applied to."
          }
        ],
        "lora_name": [
          [],
          {
            "tooltip": "The name of the LoRA."
          }
        ],
        "model": [
          "MODEL",
          {
            "tooltip": "The diffusion model the LoRA will be applied to."
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "tooltip": "How strongly to modify the CLIP model. This value can be negative.",
            "default": 1.0,
            "max": 100.0,
            "min": -100.0,
            "step": 0.01
          }
        ],
        "strength_model": [
          "FLOAT",
          {
            "tooltip": "How strongly to modify the diffusion model. This value can be negative.",
            "default": 1.0,
            "max": 100.0,
            "min": -100.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "clip",
        "lora_name",
        "strength_model",
        "strength_clip"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": [
      "The modified diffusion model.",
      "The modified CLIP model."
    ]
  },
  {
    "name": "LoraLoaderModelOnly",
    "display_name": "LoraLoaderModelOnly",
    "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "lora_name": [
          []
        ],
        "model": [
          "MODEL"
        ],
        "strength_model": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": -100.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "lora_name",
        "strength_model"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": [
      "The modified diffusion model.",
      "The modified CLIP model."
    ]
  },
  {
    "name": "LotusConditioning",
    "display_name": "LotusConditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_lotus",
    "category": "conditioning/lotus",
    "input": {
      "required": {},
      "optional": null
    },
    "input_order": {
      "required": [],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "conditioning"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "MaskComposite",
    "display_name": "MaskComposite",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "destination": [
          "MASK"
        ],
        "operation": [
          []
        ],
        "source": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "destination",
        "source",
        "x",
        "y",
        "operation"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "MaskPreview",
    "display_name": "MaskPreview",
    "description": "Saves the input images to your ComfyUI output directory.",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "MaskToImage",
    "display_name": "Convert Mask to Image",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelComputeDtype",
    "display_name": "ModelComputeDtype",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/debug/model",
    "input": {
      "required": {
        "dtype": [
          []
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "dtype"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeAdd",
    "display_name": "ModelMergeAdd",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeAuraflow",
    "display_name": "ModelMergeAuraflow",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "cond_seq_linear.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_layers.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_layers.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_layers.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_layers.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_linear.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "init_x_linear.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "modF.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "positional_encoding": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "register_tokens": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.28.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.29.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.30.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.31.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_layers.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "init_x_linear.",
        "positional_encoding",
        "cond_seq_linear.",
        "register_tokens",
        "t_embedder.",
        "double_layers.0.",
        "double_layers.1.",
        "double_layers.2.",
        "double_layers.3.",
        "single_layers.0.",
        "single_layers.1.",
        "single_layers.2.",
        "single_layers.3.",
        "single_layers.4.",
        "single_layers.5.",
        "single_layers.6.",
        "single_layers.7.",
        "single_layers.8.",
        "single_layers.9.",
        "single_layers.10.",
        "single_layers.11.",
        "single_layers.12.",
        "single_layers.13.",
        "single_layers.14.",
        "single_layers.15.",
        "single_layers.16.",
        "single_layers.17.",
        "single_layers.18.",
        "single_layers.19.",
        "single_layers.20.",
        "single_layers.21.",
        "single_layers.22.",
        "single_layers.23.",
        "single_layers.24.",
        "single_layers.25.",
        "single_layers.26.",
        "single_layers.27.",
        "single_layers.28.",
        "single_layers.29.",
        "single_layers.30.",
        "single_layers.31.",
        "modF.",
        "final_linear."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeBlocks",
    "display_name": "ModelMergeBlocks",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "input": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "out": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "input",
        "middle",
        "out"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeCosmos14B",
    "display_name": "ModelMergeCosmos14B",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "affline_norm.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block28.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block29.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block30.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block31.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block32.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block33.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block34.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block35.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "extra_pos_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_layer.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "pos_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "x_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "pos_embedder.",
        "extra_pos_embedder.",
        "x_embedder.",
        "t_embedder.",
        "affline_norm.",
        "blocks.block0.",
        "blocks.block1.",
        "blocks.block2.",
        "blocks.block3.",
        "blocks.block4.",
        "blocks.block5.",
        "blocks.block6.",
        "blocks.block7.",
        "blocks.block8.",
        "blocks.block9.",
        "blocks.block10.",
        "blocks.block11.",
        "blocks.block12.",
        "blocks.block13.",
        "blocks.block14.",
        "blocks.block15.",
        "blocks.block16.",
        "blocks.block17.",
        "blocks.block18.",
        "blocks.block19.",
        "blocks.block20.",
        "blocks.block21.",
        "blocks.block22.",
        "blocks.block23.",
        "blocks.block24.",
        "blocks.block25.",
        "blocks.block26.",
        "blocks.block27.",
        "blocks.block28.",
        "blocks.block29.",
        "blocks.block30.",
        "blocks.block31.",
        "blocks.block32.",
        "blocks.block33.",
        "blocks.block34.",
        "blocks.block35.",
        "final_layer."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeCosmos7B",
    "display_name": "ModelMergeCosmos7B",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "affline_norm.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.block9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "extra_pos_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_layer.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "pos_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "x_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "pos_embedder.",
        "extra_pos_embedder.",
        "x_embedder.",
        "t_embedder.",
        "affline_norm.",
        "blocks.block0.",
        "blocks.block1.",
        "blocks.block2.",
        "blocks.block3.",
        "blocks.block4.",
        "blocks.block5.",
        "blocks.block6.",
        "blocks.block7.",
        "blocks.block8.",
        "blocks.block9.",
        "blocks.block10.",
        "blocks.block11.",
        "blocks.block12.",
        "blocks.block13.",
        "blocks.block14.",
        "blocks.block15.",
        "blocks.block16.",
        "blocks.block17.",
        "blocks.block18.",
        "blocks.block19.",
        "blocks.block20.",
        "blocks.block21.",
        "blocks.block22.",
        "blocks.block23.",
        "blocks.block24.",
        "blocks.block25.",
        "blocks.block26.",
        "blocks.block27.",
        "final_layer."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeFlux1",
    "display_name": "ModelMergeFlux1",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "double_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_layer.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "guidance_in": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "img_in.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "single_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.28.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.29.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.30.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.31.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.32.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.33.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.34.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.35.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.36.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.37.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_in.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "txt_in.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "vector_in.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "img_in.",
        "time_in.",
        "guidance_in",
        "vector_in.",
        "txt_in.",
        "double_blocks.0.",
        "double_blocks.1.",
        "double_blocks.2.",
        "double_blocks.3.",
        "double_blocks.4.",
        "double_blocks.5.",
        "double_blocks.6.",
        "double_blocks.7.",
        "double_blocks.8.",
        "double_blocks.9.",
        "double_blocks.10.",
        "double_blocks.11.",
        "double_blocks.12.",
        "double_blocks.13.",
        "double_blocks.14.",
        "double_blocks.15.",
        "double_blocks.16.",
        "double_blocks.17.",
        "double_blocks.18.",
        "single_blocks.0.",
        "single_blocks.1.",
        "single_blocks.2.",
        "single_blocks.3.",
        "single_blocks.4.",
        "single_blocks.5.",
        "single_blocks.6.",
        "single_blocks.7.",
        "single_blocks.8.",
        "single_blocks.9.",
        "single_blocks.10.",
        "single_blocks.11.",
        "single_blocks.12.",
        "single_blocks.13.",
        "single_blocks.14.",
        "single_blocks.15.",
        "single_blocks.16.",
        "single_blocks.17.",
        "single_blocks.18.",
        "single_blocks.19.",
        "single_blocks.20.",
        "single_blocks.21.",
        "single_blocks.22.",
        "single_blocks.23.",
        "single_blocks.24.",
        "single_blocks.25.",
        "single_blocks.26.",
        "single_blocks.27.",
        "single_blocks.28.",
        "single_blocks.29.",
        "single_blocks.30.",
        "single_blocks.31.",
        "single_blocks.32.",
        "single_blocks.33.",
        "single_blocks.34.",
        "single_blocks.35.",
        "single_blocks.36.",
        "single_blocks.37.",
        "final_layer."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeLTXV",
    "display_name": "ModelMergeLTXV",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "adaln_single.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "caption_projection.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "patchify_proj.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "proj_out.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "scale_shift_table": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "transformer_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "patchify_proj.",
        "adaln_single.",
        "caption_projection.",
        "transformer_blocks.0.",
        "transformer_blocks.1.",
        "transformer_blocks.2.",
        "transformer_blocks.3.",
        "transformer_blocks.4.",
        "transformer_blocks.5.",
        "transformer_blocks.6.",
        "transformer_blocks.7.",
        "transformer_blocks.8.",
        "transformer_blocks.9.",
        "transformer_blocks.10.",
        "transformer_blocks.11.",
        "transformer_blocks.12.",
        "transformer_blocks.13.",
        "transformer_blocks.14.",
        "transformer_blocks.15.",
        "transformer_blocks.16.",
        "transformer_blocks.17.",
        "transformer_blocks.18.",
        "transformer_blocks.19.",
        "transformer_blocks.20.",
        "transformer_blocks.21.",
        "transformer_blocks.22.",
        "transformer_blocks.23.",
        "transformer_blocks.24.",
        "transformer_blocks.25.",
        "transformer_blocks.26.",
        "transformer_blocks.27.",
        "scale_shift_table",
        "proj_out."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeMochiPreview",
    "display_name": "ModelMergeMochiPreview",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.28.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.29.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.30.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.31.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.32.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.33.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.34.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.35.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.36.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.37.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.38.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.39.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.40.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.41.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.42.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.43.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.44.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.45.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.46.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.47.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_layer.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "pos_frequencies.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t5_y_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t5_yproj.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "pos_frequencies.",
        "t_embedder.",
        "t5_y_embedder.",
        "t5_yproj.",
        "blocks.0.",
        "blocks.1.",
        "blocks.2.",
        "blocks.3.",
        "blocks.4.",
        "blocks.5.",
        "blocks.6.",
        "blocks.7.",
        "blocks.8.",
        "blocks.9.",
        "blocks.10.",
        "blocks.11.",
        "blocks.12.",
        "blocks.13.",
        "blocks.14.",
        "blocks.15.",
        "blocks.16.",
        "blocks.17.",
        "blocks.18.",
        "blocks.19.",
        "blocks.20.",
        "blocks.21.",
        "blocks.22.",
        "blocks.23.",
        "blocks.24.",
        "blocks.25.",
        "blocks.26.",
        "blocks.27.",
        "blocks.28.",
        "blocks.29.",
        "blocks.30.",
        "blocks.31.",
        "blocks.32.",
        "blocks.33.",
        "blocks.34.",
        "blocks.35.",
        "blocks.36.",
        "blocks.37.",
        "blocks.38.",
        "blocks.39.",
        "blocks.40.",
        "blocks.41.",
        "blocks.42.",
        "blocks.43.",
        "blocks.44.",
        "blocks.45.",
        "blocks.46.",
        "blocks.47.",
        "final_layer."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSD1",
    "display_name": "ModelMergeSD1",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "input_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "out.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "time_embed.",
        "label_emb.",
        "input_blocks.0.",
        "input_blocks.1.",
        "input_blocks.2.",
        "input_blocks.3.",
        "input_blocks.4.",
        "input_blocks.5.",
        "input_blocks.6.",
        "input_blocks.7.",
        "input_blocks.8.",
        "input_blocks.9.",
        "input_blocks.10.",
        "input_blocks.11.",
        "middle_block.0.",
        "middle_block.1.",
        "middle_block.2.",
        "output_blocks.0.",
        "output_blocks.1.",
        "output_blocks.2.",
        "output_blocks.3.",
        "output_blocks.4.",
        "output_blocks.5.",
        "output_blocks.6.",
        "output_blocks.7.",
        "output_blocks.8.",
        "output_blocks.9.",
        "output_blocks.10.",
        "output_blocks.11.",
        "out."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSD2",
    "display_name": "ModelMergeSD2",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "input_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "out.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "time_embed.",
        "label_emb.",
        "input_blocks.0.",
        "input_blocks.1.",
        "input_blocks.2.",
        "input_blocks.3.",
        "input_blocks.4.",
        "input_blocks.5.",
        "input_blocks.6.",
        "input_blocks.7.",
        "input_blocks.8.",
        "input_blocks.9.",
        "input_blocks.10.",
        "input_blocks.11.",
        "middle_block.0.",
        "middle_block.1.",
        "middle_block.2.",
        "output_blocks.0.",
        "output_blocks.1.",
        "output_blocks.2.",
        "output_blocks.3.",
        "output_blocks.4.",
        "output_blocks.5.",
        "output_blocks.6.",
        "output_blocks.7.",
        "output_blocks.8.",
        "output_blocks.9.",
        "output_blocks.10.",
        "output_blocks.11.",
        "out."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSD35_Large",
    "display_name": "ModelMergeSD35_Large",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "context_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_layer.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.28.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.29.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.30.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.31.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.32.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.33.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.34.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.35.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.36.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.37.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "pos_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "x_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "y_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "pos_embed.",
        "x_embedder.",
        "context_embedder.",
        "y_embedder.",
        "t_embedder.",
        "joint_blocks.0.",
        "joint_blocks.1.",
        "joint_blocks.2.",
        "joint_blocks.3.",
        "joint_blocks.4.",
        "joint_blocks.5.",
        "joint_blocks.6.",
        "joint_blocks.7.",
        "joint_blocks.8.",
        "joint_blocks.9.",
        "joint_blocks.10.",
        "joint_blocks.11.",
        "joint_blocks.12.",
        "joint_blocks.13.",
        "joint_blocks.14.",
        "joint_blocks.15.",
        "joint_blocks.16.",
        "joint_blocks.17.",
        "joint_blocks.18.",
        "joint_blocks.19.",
        "joint_blocks.20.",
        "joint_blocks.21.",
        "joint_blocks.22.",
        "joint_blocks.23.",
        "joint_blocks.24.",
        "joint_blocks.25.",
        "joint_blocks.26.",
        "joint_blocks.27.",
        "joint_blocks.28.",
        "joint_blocks.29.",
        "joint_blocks.30.",
        "joint_blocks.31.",
        "joint_blocks.32.",
        "joint_blocks.33.",
        "joint_blocks.34.",
        "joint_blocks.35.",
        "joint_blocks.36.",
        "joint_blocks.37.",
        "final_layer."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSD3_2B",
    "display_name": "ModelMergeSD3_2B",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "context_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_layer.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "pos_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "x_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "y_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "pos_embed.",
        "x_embedder.",
        "context_embedder.",
        "y_embedder.",
        "t_embedder.",
        "joint_blocks.0.",
        "joint_blocks.1.",
        "joint_blocks.2.",
        "joint_blocks.3.",
        "joint_blocks.4.",
        "joint_blocks.5.",
        "joint_blocks.6.",
        "joint_blocks.7.",
        "joint_blocks.8.",
        "joint_blocks.9.",
        "joint_blocks.10.",
        "joint_blocks.11.",
        "joint_blocks.12.",
        "joint_blocks.13.",
        "joint_blocks.14.",
        "joint_blocks.15.",
        "joint_blocks.16.",
        "joint_blocks.17.",
        "joint_blocks.18.",
        "joint_blocks.19.",
        "joint_blocks.20.",
        "joint_blocks.21.",
        "joint_blocks.22.",
        "joint_blocks.23.",
        "final_layer."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSDXL",
    "display_name": "ModelMergeSDXL",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "input_blocks.0": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.3": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.4": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.5": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.6": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.7": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.8": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.0": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "out.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.0": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.3": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.4": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.5": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.6": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.7": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.8": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "time_embed.",
        "label_emb.",
        "input_blocks.0",
        "input_blocks.1",
        "input_blocks.2",
        "input_blocks.3",
        "input_blocks.4",
        "input_blocks.5",
        "input_blocks.6",
        "input_blocks.7",
        "input_blocks.8",
        "middle_block.0",
        "middle_block.1",
        "middle_block.2",
        "output_blocks.0",
        "output_blocks.1",
        "output_blocks.2",
        "output_blocks.3",
        "output_blocks.4",
        "output_blocks.5",
        "output_blocks.6",
        "output_blocks.7",
        "output_blocks.8",
        "out."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSimple",
    "display_name": "ModelMergeSimple",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "ratio"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSubtract",
    "display_name": "ModelMergeSubtract",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeWAN2_1",
    "display_name": "ModelMergeWAN2_1",
    "description": "1.3B model has 30 blocks, 14B model has 40 blocks. Image to video model has the extra img_emb.",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.28.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.29.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.30.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.31.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.32.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.33.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.34.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.35.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.36.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.37.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.38.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.39.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "head.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "img_emb.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "patch_embedding.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "text_embedding.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_embedding.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_projection.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "patch_embedding.",
        "time_embedding.",
        "time_projection.",
        "text_embedding.",
        "img_emb.",
        "blocks.0.",
        "blocks.1.",
        "blocks.2.",
        "blocks.3.",
        "blocks.4.",
        "blocks.5.",
        "blocks.6.",
        "blocks.7.",
        "blocks.8.",
        "blocks.9.",
        "blocks.10.",
        "blocks.11.",
        "blocks.12.",
        "blocks.13.",
        "blocks.14.",
        "blocks.15.",
        "blocks.16.",
        "blocks.17.",
        "blocks.18.",
        "blocks.19.",
        "blocks.20.",
        "blocks.21.",
        "blocks.22.",
        "blocks.23.",
        "blocks.24.",
        "blocks.25.",
        "blocks.26.",
        "blocks.27.",
        "blocks.28.",
        "blocks.29.",
        "blocks.30.",
        "blocks.31.",
        "blocks.32.",
        "blocks.33.",
        "blocks.34.",
        "blocks.35.",
        "blocks.36.",
        "blocks.37.",
        "blocks.38.",
        "blocks.39.",
        "head."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingAuraFlow",
    "display_name": "ModelSamplingAuraFlow",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.73,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "shift"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingContinuousEDM",
    "display_name": "ModelSamplingContinuousEDM",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          []
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 120.0,
            "max": 1000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.002,
            "max": 1000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "sampling",
        "sigma_max",
        "sigma_min"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingContinuousV",
    "display_name": "ModelSamplingContinuousV",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          []
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 500.0,
            "max": 1000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.03,
            "max": 1000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "sampling",
        "sigma_max",
        "sigma_min"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingDiscrete",
    "display_name": "ModelSamplingDiscrete",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          []
        ],
        "zsnr": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "sampling",
        "zsnr"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingFlux",
    "display_name": "ModelSamplingFlux",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "base_shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "max_shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.15,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "max_shift",
        "base_shift",
        "width",
        "height"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingLTXV",
    "display_name": "ModelSamplingLTXV",
    "description": "",
    "python_module": "comfy_extras.nodes_lt",
    "category": "advanced/model",
    "input": {
      "required": {
        "base_shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.95,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "max_shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 2.05,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": {
        "latent": [
          "LATENT"
        ]
      }
    },
    "input_order": {
      "required": [
        "model",
        "max_shift",
        "base_shift"
      ],
      "optional": [
        "latent"
      ]
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingSD3",
    "display_name": "ModelSamplingSD3",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.0,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "shift"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingStableCascade",
    "display_name": "ModelSamplingStableCascade",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 2.0,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "shift"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSave",
    "display_name": "ModelSave",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "diffusion_models/ComfyUI"
          }
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "Morphology",
    "display_name": "ImageMorphology",
    "description": "",
    "python_module": "comfy_extras.nodes_morphology",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "kernel_size": [
          "INT",
          {
            "tooltip": null,
            "default": 3,
            "max": 999,
            "min": 3,
            "step": 1
          }
        ],
        "operation": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "operation",
        "kernel_size"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "OpenAIDalle2",
    "display_name": "OpenAI DALL·E 2",
    "description": "Generates images synchronously via OpenAI's DALL·E 2 endpoint.\n\nUses the proxy at /proxy/openai/images/generations. Returned URLs are short‑lived,\nso download or cache results if you need to keep them.",
    "python_module": "comfy_api_nodes.nodes_api",
    "category": "api node",
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "tooltip": "Text prompt for DALL·E",
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "image": [
          "IMAGE",
          {
            "tooltip": "Optional reference image for image editing."
          }
        ],
        "mask": [
          "MASK",
          {
            "tooltip": "Optional mask for inpainting (white areas will be replaced)"
          }
        ],
        "n": [
          "INT",
          {
            "tooltip": "How many images to generate",
            "default": 1,
            "display": "number",
            "max": 8,
            "min": 1,
            "step": 1
          }
        ],
        "seed": [
          "INT",
          {
            "tooltip": "not implemented yet in backend",
            "default": 0,
            "display": "number",
            "max": 2147483647,
            "min": 0,
            "step": 1
          }
        ],
        "size": [
          "COMBO",
          {
            "tooltip": "Image size",
            "default": "1024x1024"
          }
        ]
      }
    },
    "input_order": {
      "required": [
        "prompt"
      ],
      "optional": [
        "seed",
        "size",
        "n",
        "image",
        "mask"
      ]
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "OpenAIDalle3",
    "display_name": "OpenAI DALL·E 3",
    "description": "Generates images synchronously via OpenAI's DALL·E 3 endpoint.\n\nUses the proxy at /proxy/openai/images/generations. Returned URLs are short‑lived,\nso download or cache results if you need to keep them.",
    "python_module": "comfy_api_nodes.nodes_api",
    "category": "api node",
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "tooltip": "Text prompt for DALL·E",
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "quality": [
          "COMBO",
          {
            "tooltip": "Image quality",
            "default": "standard"
          }
        ],
        "seed": [
          "INT",
          {
            "tooltip": "not implemented yet in backend",
            "default": 0,
            "display": "number",
            "max": 2147483647,
            "min": 0,
            "step": 1
          }
        ],
        "size": [
          "COMBO",
          {
            "tooltip": "Image size",
            "default": "1024x1024"
          }
        ],
        "style": [
          "COMBO",
          {
            "tooltip": "Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images.",
            "default": "natural"
          }
        ]
      }
    },
    "input_order": {
      "required": [
        "prompt"
      ],
      "optional": [
        "seed",
        "quality",
        "style",
        "size"
      ]
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "OpenAIGPTImage1",
    "display_name": "OpenAI GPT Image 1",
    "description": "Generates images synchronously via OpenAI's GPT Image 1 endpoint.\n\nUses the proxy at /proxy/openai/images/generations. Returned URLs are short‑lived,\nso download or cache results if you need to keep them.",
    "python_module": "comfy_api_nodes.nodes_api",
    "category": "api node",
    "input": {
      "required": {
        "prompt": [
          "STRING",
          {
            "tooltip": "Text prompt for GPT Image 1",
            "multiline": true,
            "default": ""
          }
        ]
      },
      "optional": {
        "background": [
          "COMBO",
          {
            "tooltip": "Return image with or without background",
            "default": "opaque"
          }
        ],
        "image": [
          "IMAGE",
          {
            "tooltip": "Optional reference image for image editing."
          }
        ],
        "mask": [
          "MASK",
          {
            "tooltip": "Optional mask for inpainting (white areas will be replaced)"
          }
        ],
        "moderation": [
          "COMBO",
          {
            "tooltip": "Moderation level",
            "default": "low"
          }
        ],
        "n": [
          "INT",
          {
            "tooltip": "How many images to generate",
            "default": 1,
            "display": "number",
            "max": 8,
            "min": 1,
            "step": 1
          }
        ],
        "quality": [
          "COMBO",
          {
            "tooltip": "Image quality, affects cost and generation time.",
            "default": "low"
          }
        ],
        "seed": [
          "INT",
          {
            "tooltip": "not implemented yet in backend",
            "default": 0,
            "display": "number",
            "max": 2147483647,
            "min": 0,
            "step": 1
          }
        ],
        "size": [
          "COMBO",
          {
            "tooltip": "Image size",
            "default": "auto"
          }
        ]
      }
    },
    "input_order": {
      "required": [
        "prompt"
      ],
      "optional": [
        "seed",
        "quality",
        "background",
        "size",
        "n",
        "image",
        "mask",
        "moderation"
      ]
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "OptimalStepsScheduler",
    "display_name": "OptimalStepsScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_optimalsteps",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model_type": [
          []
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 1000,
            "min": 3
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_type",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PairConditioningCombine",
    "display_name": "Cond Pair Combine",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/cond pair",
    "input": {
      "required": {
        "negative_A": [
          "CONDITIONING"
        ],
        "negative_B": [
          "CONDITIONING"
        ],
        "positive_A": [
          "CONDITIONING"
        ],
        "positive_B": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive_A",
        "negative_A",
        "positive_B",
        "negative_B"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PairConditioningSetDefaultCombine",
    "display_name": "Cond Pair Set Default Combine",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/cond pair",
    "input": {
      "required": {
        "negative": [
          "CONDITIONING"
        ],
        "negative_DEFAULT": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "positive_DEFAULT": [
          "CONDITIONING"
        ]
      },
      "optional": {
        "hooks": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "positive_DEFAULT",
        "negative_DEFAULT"
      ],
      "optional": [
        "hooks"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PairConditioningSetProperties",
    "display_name": "Cond Pair Set Props",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/cond pair",
    "input": {
      "required": {
        "negative_NEW": [
          "CONDITIONING"
        ],
        "positive_NEW": [
          "CONDITIONING"
        ],
        "set_cond_area": [
          []
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "hooks": [
          "HOOKS"
        ],
        "mask": [
          "MASK"
        ],
        "timesteps": [
          "TIMESTEPS_RANGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive_NEW",
        "negative_NEW",
        "strength",
        "set_cond_area"
      ],
      "optional": [
        "mask",
        "hooks",
        "timesteps"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PairConditioningSetPropertiesAndCombine",
    "display_name": "Cond Pair Set Props Combine",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/cond pair",
    "input": {
      "required": {
        "negative": [
          "CONDITIONING"
        ],
        "negative_NEW": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "positive_NEW": [
          "CONDITIONING"
        ],
        "set_cond_area": [
          []
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "hooks": [
          "HOOKS"
        ],
        "mask": [
          "MASK"
        ],
        "timesteps": [
          "TIMESTEPS_RANGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "positive_NEW",
        "negative_NEW",
        "strength",
        "set_cond_area"
      ],
      "optional": [
        "mask",
        "hooks",
        "timesteps"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PatchModelAddDownscale",
    "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
    "description": "",
    "python_module": "comfy_extras.nodes_model_downscale",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "block_number": [
          "INT",
          {
            "tooltip": null,
            "default": 3,
            "max": 32,
            "min": 1,
            "step": 1
          }
        ],
        "downscale_after_skip": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "downscale_factor": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 2.0,
            "max": 9.0,
            "min": 0.1,
            "step": 0.001
          }
        ],
        "downscale_method": [
          []
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.35,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "model": [
          "MODEL"
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "upscale_method": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "block_number",
        "downscale_factor",
        "start_percent",
        "end_percent",
        "downscale_after_skip",
        "downscale_method",
        "upscale_method"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PerturbedAttentionGuidance",
    "display_name": "PerturbedAttentionGuidance",
    "description": "",
    "python_module": "comfy_extras.nodes_pag",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "scale"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PolyexponentialScheduler",
    "display_name": "PolyexponentialScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "rho": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 14.614642,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0291675,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "sigma_max",
        "sigma_min",
        "rho"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PorterDuffImageComposite",
    "display_name": "Porter-Duff Image Composite",
    "description": "",
    "python_module": "comfy_extras.nodes_compositing",
    "category": "mask/compositing",
    "input": {
      "required": {
        "destination": [
          "IMAGE"
        ],
        "destination_alpha": [
          "MASK"
        ],
        "mode": [
          [],
          {
            "tooltip": null,
            "default": "DST"
          }
        ],
        "source": [
          "IMAGE"
        ],
        "source_alpha": [
          "MASK"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "source",
        "source_alpha",
        "destination",
        "destination_alpha",
        "mode"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "Preview3D",
    "display_name": "Preview 3D",
    "description": "",
    "python_module": "comfy_extras.nodes_load_3d",
    "category": "3d",
    "input": {
      "required": {
        "model_file": [
          "STRING",
          {
            "tooltip": null,
            "multiline": false,
            "default": ""
          }
        ]
      },
      "optional": {
        "camera_info": [
          "LOAD3D_CAMERA",
          {
            "tooltip": null
          }
        ]
      }
    },
    "input_order": {
      "required": [
        "model_file"
      ],
      "optional": [
        "camera_info"
      ]
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "Preview3DAnimation",
    "display_name": "Preview 3D - Animation",
    "description": "",
    "python_module": "comfy_extras.nodes_load_3d",
    "category": "3d",
    "input": {
      "required": {
        "model_file": [
          "STRING",
          {
            "tooltip": null,
            "multiline": false,
            "default": ""
          }
        ]
      },
      "optional": {
        "camera_info": [
          "LOAD3D_CAMERA",
          {
            "tooltip": null
          }
        ]
      }
    },
    "input_order": {
      "required": [
        "model_file"
      ],
      "optional": [
        "camera_info"
      ]
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "PreviewAudio",
    "display_name": "PreviewAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "audio",
    "input": {
      "required": {
        "audio": [
          "AUDIO"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "audio"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "PreviewImage",
    "display_name": "Preview Image",
    "description": "Saves the input images to your ComfyUI output directory.",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "PrimitiveBoolean",
    "display_name": "Boolean",
    "description": "",
    "python_module": "comfy_extras.nodes_primitive",
    "category": "utils/primitive",
    "input": {
      "required": {
        "value": [
          "BOOLEAN",
          {
            "tooltip": null
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "value"
      ],
      "optional": null
    },
    "output": [
      "BOOLEAN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "BOOLEAN"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PrimitiveFloat",
    "display_name": "Float",
    "description": "",
    "python_module": "comfy_extras.nodes_primitive",
    "category": "utils/primitive",
    "input": {
      "required": {
        "value": [
          "FLOAT",
          {
            "tooltip": null
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "value"
      ],
      "optional": null
    },
    "output": [
      "FLOAT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "FLOAT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PrimitiveInt",
    "display_name": "Int",
    "description": "",
    "python_module": "comfy_extras.nodes_primitive",
    "category": "utils/primitive",
    "input": {
      "required": {
        "value": [
          "INT",
          {
            "tooltip": null
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "value"
      ],
      "optional": null
    },
    "output": [
      "INT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "INT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PrimitiveString",
    "display_name": "String",
    "description": "",
    "python_module": "comfy_extras.nodes_primitive",
    "category": "utils/primitive",
    "input": {
      "required": {
        "value": [
          "STRING",
          {
            "tooltip": null
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "value"
      ],
      "optional": null
    },
    "output": [
      "STRING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STRING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "QuadrupleCLIPLoader",
    "display_name": "QuadrupleCLIPLoader",
    "description": "[Recipes]\n\nhidream: long clip-l, long clip-g, t5xxl, llama_8b_3.1_instruct",
    "python_module": "comfy_extras.nodes_hidream",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "clip_name1": [
          []
        ],
        "clip_name2": [
          []
        ],
        "clip_name3": [
          []
        ],
        "clip_name4": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_name1",
        "clip_name2",
        "clip_name3",
        "clip_name4"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RandomNoise",
    "display_name": "RandomNoise",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/noise",
    "input": {
      "required": {
        "noise_seed": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 18446744073709551615,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "noise_seed"
      ],
      "optional": null
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RebatchImages",
    "display_name": "Rebatch Images",
    "description": "",
    "python_module": "comfy_extras.nodes_rebatch",
    "category": "image/batch",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "images": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RebatchLatents",
    "display_name": "Rebatch Latents",
    "description": "",
    "python_module": "comfy_extras.nodes_rebatch",
    "category": "latent/batch",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "latents": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "latents",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RenormCFG",
    "display_name": "RenormCFG",
    "description": "",
    "python_module": "comfy_extras.nodes_lumina2",
    "category": "advanced/model",
    "input": {
      "required": {
        "cfg_trunc": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 100,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "renorm_cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "cfg_trunc",
        "renorm_cfg"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RepeatImageBatch",
    "display_name": "RepeatImageBatch",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/batch",
    "input": {
      "required": {
        "amount": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "amount"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RepeatLatentBatch",
    "display_name": "Repeat Latent Batch",
    "description": "",
    "python_module": "nodes",
    "category": "latent/batch",
    "input": {
      "required": {
        "amount": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 64,
            "min": 1
          }
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "amount"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RescaleCFG",
    "display_name": "RescaleCFG",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.7,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SDTurboScheduler",
    "display_name": "SDTurboScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 10,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SD_4XUpscale_Conditioning",
    "display_name": "SD_4XUpscale_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_sdupscale",
    "category": "conditioning/upscale_diffusion",
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "scale_ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 4.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "positive",
        "negative",
        "scale_ratio",
        "noise_augmentation"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SV3D_Conditioning",
    "display_name": "SV3D_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_stable3d",
    "category": "conditioning/3d_models",
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "elevation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 90.0,
            "min": -90.0,
            "round": false,
            "step": 0.1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 576,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "video_frames": [
          "INT",
          {
            "tooltip": null,
            "default": 21,
            "max": 4096,
            "min": 1
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 576,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "init_image",
        "vae",
        "width",
        "height",
        "video_frames",
        "elevation"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SVD_img2vid_Conditioning",
    "display_name": "SVD_img2vid_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "augmentation_level": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "fps": [
          "INT",
          {
            "tooltip": null,
            "default": 6,
            "max": 1024,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 576,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "motion_bucket_id": [
          "INT",
          {
            "tooltip": null,
            "default": 127,
            "max": 1023,
            "min": 1
          }
        ],
        "vae": [
          "VAE"
        ],
        "video_frames": [
          "INT",
          {
            "tooltip": null,
            "default": 14,
            "max": 4096,
            "min": 1
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "init_image",
        "vae",
        "width",
        "height",
        "video_frames",
        "motion_bucket_id",
        "fps",
        "augmentation_level"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerCustom",
    "display_name": "SamplerCustom",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling",
    "input": {
      "required": {
        "add_noise": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "latent_image": [
          "LATENT"
        ],
        "model": [
          "MODEL"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "noise_seed": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 18446744073709551615,
            "min": 0
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "add_noise",
        "noise_seed",
        "cfg",
        "positive",
        "negative",
        "sampler",
        "sigmas",
        "latent_image"
      ],
      "optional": null
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerCustomAdvanced",
    "display_name": "SamplerCustomAdvanced",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling",
    "input": {
      "required": {
        "guider": [
          "GUIDER"
        ],
        "latent_image": [
          "LATENT"
        ],
        "noise": [
          "NOISE"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "noise",
        "guider",
        "sampler",
        "sigmas",
        "latent_image"
      ],
      "optional": null
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMAdaptative",
    "display_name": "SamplerDPMAdaptative",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "accept_safety": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.81,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "atol": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0078,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "dcoeff": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "h_init": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.05,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "icoeff": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "order": [
          "INT",
          {
            "tooltip": null,
            "default": 3,
            "max": 3,
            "min": 2
          }
        ],
        "pcoeff": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "rtol": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.05,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "order",
        "rtol",
        "atol",
        "h_init",
        "pcoeff",
        "icoeff",
        "dcoeff",
        "accept_safety",
        "eta",
        "s_noise"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMPP_2M_SDE",
    "display_name": "SamplerDPMPP_2M_SDE",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "noise_device": [
          []
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "solver_type": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "solver_type",
        "eta",
        "s_noise",
        "noise_device"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMPP_2S_Ancestral",
    "display_name": "SamplerDPMPP_2S_Ancestral",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMPP_3M_SDE",
    "display_name": "SamplerDPMPP_3M_SDE",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "noise_device": [
          []
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise",
        "noise_device"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMPP_SDE",
    "display_name": "SamplerDPMPP_SDE",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "noise_device": [
          []
        ],
        "r": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise",
        "r",
        "noise_device"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerEulerAncestral",
    "display_name": "SamplerEulerAncestral",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerEulerAncestralCFGPP",
    "display_name": "SamplerEulerAncestralCFG++",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerLCMUpscale",
    "display_name": "SamplerLCMUpscale",
    "description": "",
    "python_module": "comfy_extras.nodes_advanced_samplers",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "scale_ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": 0.1,
            "step": 0.01
          }
        ],
        "scale_steps": [
          "INT",
          {
            "tooltip": null,
            "default": -1,
            "max": 1000,
            "min": -1,
            "step": 1
          }
        ],
        "upscale_method": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "scale_ratio",
        "scale_steps",
        "upscale_method"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerLMS",
    "display_name": "SamplerLMS",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "order": [
          "INT",
          {
            "tooltip": null,
            "default": 4,
            "max": 100,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "order"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SaveAnimatedPNG",
    "display_name": "SaveAnimatedPNG",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/animation",
    "input": {
      "required": {
        "compress_level": [
          "INT",
          {
            "tooltip": null,
            "default": 4,
            "max": 9,
            "min": 0
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 6.0,
            "max": 1000.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "images": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "filename_prefix",
        "fps",
        "compress_level"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveAnimatedWEBP",
    "display_name": "SaveAnimatedWEBP",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/animation",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 6.0,
            "max": 1000.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "images": [
          "IMAGE"
        ],
        "lossless": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "method": [
          []
        ],
        "quality": [
          "INT",
          {
            "tooltip": null,
            "default": 80,
            "max": 100,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "filename_prefix",
        "fps",
        "lossless",
        "quality",
        "method"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveAudio",
    "display_name": "SaveAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "audio",
    "input": {
      "required": {
        "audio": [
          "AUDIO"
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "audio/ComfyUI"
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "audio",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveGLB",
    "display_name": "SaveGLB",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan3d",
    "category": "3d",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "mesh/ComfyUI"
          }
        ],
        "mesh": [
          "MESH"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mesh",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveImage",
    "display_name": "Save Image",
    "description": "Saves the input images to your ComfyUI output directory.",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes.",
            "default": "ComfyUI"
          }
        ],
        "images": [
          "IMAGE",
          {
            "tooltip": "The images to save."
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveVideo",
    "display_name": "Save Video",
    "description": "Saves the input images to your ComfyUI output directory.",
    "python_module": "comfy_extras.nodes_video",
    "category": "image/video",
    "input": {
      "required": {
        "codec": [
          [],
          {
            "tooltip": "The codec to use for the video.",
            "default": "auto"
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes.",
            "default": "video/ComfyUI"
          }
        ],
        "format": [
          [],
          {
            "tooltip": "The format to save the video as.",
            "default": "auto"
          }
        ],
        "video": [
          "VIDEO",
          {
            "tooltip": "The video to save."
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "video",
        "filename_prefix",
        "format",
        "codec"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveWEBM",
    "display_name": "SaveWEBM",
    "description": "",
    "python_module": "comfy_extras.nodes_video",
    "category": "image/video",
    "input": {
      "required": {
        "codec": [
          []
        ],
        "crf": [
          "FLOAT",
          {
            "tooltip": "Higher crf means lower quality with a smaller file size, lower crf means higher quality higher filesize.",
            "default": 32.0,
            "max": 63.0,
            "min": 0,
            "step": 1
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 24.0,
            "max": 1000.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "images": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "filename_prefix",
        "codec",
        "fps",
        "crf"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SetClipHooks",
    "display_name": "Set CLIP Hooks",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/clip",
    "input": {
      "required": {
        "apply_to_conds": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "schedule_clip": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ]
      },
      "optional": {
        "hooks": [
          "HOOKS"
        ]
      }
    },
    "input_order": {
      "required": [
        "clip",
        "apply_to_conds",
        "schedule_clip"
      ],
      "optional": [
        "hooks"
      ]
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SetFirstSigma",
    "display_name": "SetFirstSigma",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/sigmas",
    "input": {
      "required": {
        "sigma": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 136.0,
            "max": 20000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ],
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sigmas",
        "sigma"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SetHookKeyframes",
    "display_name": "Set Hook Keyframes",
    "description": "",
    "python_module": "comfy_extras.nodes_hooks",
    "category": "advanced/hooks/scheduling",
    "input": {
      "required": {
        "hooks": [
          "HOOKS"
        ]
      },
      "optional": {
        "hook_kf": [
          "HOOK_KEYFRAMES"
        ]
      }
    },
    "input_order": {
      "required": [
        "hooks"
      ],
      "optional": [
        "hook_kf"
      ]
    },
    "output": [
      "HOOKS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "HOOKS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SetLatentNoiseMask",
    "display_name": "Set Latent Noise Mask",
    "description": "",
    "python_module": "nodes",
    "category": "latent/inpaint",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "mask"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SetUnionControlNetType",
    "display_name": "SetUnionControlNetType",
    "description": "",
    "python_module": "comfy_extras.nodes_controlnet",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "type": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "control_net",
        "type"
      ],
      "optional": null
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SkipLayerGuidanceDiT",
    "display_name": "SkipLayerGuidanceDiT",
    "description": "Generic version of SkipLayerGuidance node that can be used on every DiT model.",
    "python_module": "comfy_extras.nodes_slg",
    "category": "advanced/guidance",
    "input": {
      "required": {
        "double_layers": [
          "STRING",
          {
            "tooltip": null,
            "multiline": false,
            "default": "7, 8, 9"
          }
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.15,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "model": [
          "MODEL"
        ],
        "rescaling_scale": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "scale": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.1
          }
        ],
        "single_layers": [
          "STRING",
          {
            "tooltip": null,
            "multiline": false,
            "default": "7, 8, 9"
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.01,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "double_layers",
        "single_layers",
        "scale",
        "start_percent",
        "end_percent",
        "rescaling_scale"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SkipLayerGuidanceSD3",
    "display_name": "SkipLayerGuidanceSD3",
    "description": "Generic version of SkipLayerGuidance node that can be used on every DiT model.",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "advanced/guidance",
    "input": {
      "required": {
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.15,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "layers": [
          "STRING",
          {
            "tooltip": null,
            "multiline": false,
            "default": "7, 8, 9"
          }
        ],
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.1
          }
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.01,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "layers",
        "scale",
        "start_percent",
        "end_percent"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SolidMask",
    "display_name": "SolidMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "value": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "value",
        "width",
        "height"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SplitImageWithAlpha",
    "display_name": "Split Image with Alpha",
    "description": "",
    "python_module": "comfy_extras.nodes_compositing",
    "category": "mask/compositing",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SplitSigmas",
    "display_name": "SplitSigmas",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/sigmas",
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "step": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 10000,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sigmas",
        "step"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "high_sigmas",
      "low_sigmas"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SplitSigmasDenoise",
    "display_name": "SplitSigmasDenoise",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/sigmas",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sigmas",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "high_sigmas",
      "low_sigmas"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableCascade_EmptyLatentImage",
    "display_name": "StableCascade_EmptyLatentImage",
    "description": "",
    "python_module": "comfy_extras.nodes_stable_cascade",
    "category": "latent/stable_cascade",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "compression": [
          "INT",
          {
            "tooltip": null,
            "default": 42,
            "max": 128,
            "min": 4,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 256,
            "step": 8
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 256,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "compression",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableCascade_StageB_Conditioning",
    "display_name": "StableCascade_StageB_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_stable_cascade",
    "category": "conditioning/stable_cascade",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "stage_c": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "stage_c"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableCascade_StageC_VAEEncode",
    "display_name": "StableCascade_StageC_VAEEncode",
    "description": "",
    "python_module": "comfy_extras.nodes_stable_cascade",
    "category": "latent/stable_cascade",
    "input": {
      "required": {
        "compression": [
          "INT",
          {
            "tooltip": null,
            "default": 42,
            "max": 128,
            "min": 4,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "vae",
        "compression"
      ],
      "optional": null
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableZero123_Conditioning",
    "display_name": "StableZero123_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_stable3d",
    "category": "conditioning/3d_models",
    "input": {
      "required": {
        "azimuth": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "elevation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "init_image",
        "vae",
        "width",
        "height",
        "batch_size",
        "elevation",
        "azimuth"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableZero123_Conditioning_Batched",
    "display_name": "StableZero123_Conditioning_Batched",
    "description": "",
    "python_module": "comfy_extras.nodes_stable3d",
    "category": "conditioning/3d_models",
    "input": {
      "required": {
        "azimuth": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "azimuth_batch_increment": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "elevation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "elevation_batch_increment": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "init_image",
        "vae",
        "width",
        "height",
        "batch_size",
        "elevation",
        "azimuth",
        "elevation_batch_increment",
        "azimuth_batch_increment"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StyleModelApply",
    "display_name": "Apply Style Model",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/style_model",
    "input": {
      "required": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "conditioning": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength_type": [
          []
        ],
        "style_model": [
          "STYLE_MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "style_model",
        "clip_vision_output",
        "strength",
        "strength_type"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StyleModelLoader",
    "display_name": "Load Style Model",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "style_model_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "style_model_name"
      ],
      "optional": null
    },
    "output": [
      "STYLE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STYLE_MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "T5TokenizerOptions",
    "display_name": "T5TokenizerOptions",
    "description": "",
    "python_module": "comfy_extras.nodes_cond",
    "category": "sd",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "min_length": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 10000,
            "min": 0,
            "step": 1
          }
        ],
        "min_padding": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 10000,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "min_padding",
        "min_length"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "TextEncodeHunyuanVideo_ImageToVideo",
    "display_name": "TextEncodeHunyuanVideo_ImageToVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "image_interleave": [
          "INT",
          {
            "tooltip": "How much the image influences things vs the text prompt. Higher number means more influence from the text prompt.",
            "default": 2,
            "max": 512,
            "min": 1
          }
        ],
        "prompt": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "clip_vision_output",
        "prompt",
        "image_interleave"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ThresholdMask",
    "display_name": "ThresholdMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "value": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask",
        "value"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "TomePatchModel",
    "display_name": "TomePatchModel",
    "description": "",
    "python_module": "comfy_extras.nodes_tomesd",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.3,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "ratio"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "TrimVideoLatent",
    "display_name": "TrimVideoLatent",
    "description": "",
    "python_module": "comfy_extras.nodes_wan",
    "category": "latent/video",
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "trim_amount": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 99999,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "trim_amount"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "TripleCLIPLoader",
    "display_name": "TripleCLIPLoader",
    "description": "[Recipes]\n\nsd3: clip-l, clip-g, t5",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "clip_name1": [
          []
        ],
        "clip_name2": [
          []
        ],
        "clip_name3": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_name1",
        "clip_name2",
        "clip_name3"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "UNETLoader",
    "display_name": "Load Diffusion Model",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "unet_name": [
          []
        ],
        "weight_dtype": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "unet_name",
        "weight_dtype"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "UpscaleModelLoader",
    "display_name": "Load Upscale Model",
    "description": "",
    "python_module": "comfy_extras.nodes_upscale_model",
    "category": "loaders",
    "input": {
      "required": {
        "model_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_name"
      ],
      "optional": null
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEDecode",
    "display_name": "VAE Decode",
    "description": "Decodes latent images back into pixel space images.",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "samples": [
          "LATENT",
          {
            "tooltip": "The latent to be decoded."
          }
        ],
        "vae": [
          "VAE",
          {
            "tooltip": "The VAE model used for decoding the latent."
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "vae"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": [
      "The decoded image."
    ]
  },
  {
    "name": "VAEDecodeAudio",
    "display_name": "VAEDecodeAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "latent/audio",
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "vae"
      ],
      "optional": null
    },
    "output": [
      "AUDIO"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AUDIO"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEDecodeHunyuan3D",
    "display_name": "VAEDecodeHunyuan3D",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan3d",
    "category": "latent/3d",
    "input": {
      "required": {
        "num_chunks": [
          "INT",
          {
            "tooltip": null,
            "default": 8000,
            "max": 500000,
            "min": 1000
          }
        ],
        "octree_resolution": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 512,
            "min": 16
          }
        ],
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "vae",
        "num_chunks",
        "octree_resolution"
      ],
      "optional": null
    },
    "output": [
      "VOXEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VOXEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEEncode",
    "display_name": "VAE Encode",
    "description": "",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "pixels",
        "vae"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEEncodeAudio",
    "display_name": "VAEEncodeAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "latent/audio",
    "input": {
      "required": {
        "audio": [
          "AUDIO"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "audio",
        "vae"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEEncodeForInpaint",
    "display_name": "VAE Encode (for Inpainting)",
    "description": "",
    "python_module": "nodes",
    "category": "latent/inpaint",
    "input": {
      "required": {
        "grow_mask_by": [
          "INT",
          {
            "tooltip": null,
            "default": 6,
            "max": 64,
            "min": 0,
            "step": 1
          }
        ],
        "mask": [
          "MASK"
        ],
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "pixels",
        "vae",
        "mask",
        "grow_mask_by"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAELoader",
    "display_name": "Load VAE",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "vae_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "vae_name"
      ],
      "optional": null
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAESave",
    "display_name": "VAESave",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "vae/ComfyUI_vae"
          }
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "vae",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "VPScheduler",
    "display_name": "VPScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "beta_d": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 19.9,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "beta_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.1,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "eps_s": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.001,
            "max": 1.0,
            "min": 0.0,
            "round": false,
            "step": 0.0001
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "beta_d",
        "beta_min",
        "eps_s"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VideoLinearCFGGuidance",
    "display_name": "VideoLinearCFGGuidance",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "sampling/video_models",
    "input": {
      "required": {
        "min_cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.5
          }
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "min_cfg"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VideoTriangleCFGGuidance",
    "display_name": "VideoTriangleCFGGuidance",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "sampling/video_models",
    "input": {
      "required": {
        "min_cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.5
          }
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "min_cfg"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VoxelToMesh",
    "display_name": "VoxelToMesh",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan3d",
    "category": "3d",
    "input": {
      "required": {
        "algorithm": [
          []
        ],
        "threshold": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.6,
            "max": 1.0,
            "min": -1.0,
            "step": 0.01
          }
        ],
        "voxel": [
          "VOXEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "voxel",
        "algorithm",
        "threshold"
      ],
      "optional": null
    },
    "output": [
      "MESH"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MESH"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VoxelToMeshBasic",
    "display_name": "VoxelToMeshBasic",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan3d",
    "category": "3d",
    "input": {
      "required": {
        "threshold": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.6,
            "max": 1.0,
            "min": -1.0,
            "step": 0.01
          }
        ],
        "voxel": [
          "VOXEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "voxel",
        "threshold"
      ],
      "optional": null
    },
    "output": [
      "MESH"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MESH"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "WanFirstLastFrameToVideo",
    "display_name": "WanFirstLastFrameToVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_wan",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 480,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 81,
            "max": 16384,
            "min": 1,
            "step": 4
          }
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 832,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": {
        "clip_vision_end_image": [
          "CLIP_VISION_OUTPUT"
        ],
        "clip_vision_start_image": [
          "CLIP_VISION_OUTPUT"
        ],
        "end_image": [
          "IMAGE"
        ],
        "start_image": [
          "IMAGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": [
        "clip_vision_start_image",
        "clip_vision_end_image",
        "start_image",
        "end_image"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "WanFunControlToVideo",
    "display_name": "WanFunControlToVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_wan",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 480,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 81,
            "max": 16384,
            "min": 1,
            "step": 4
          }
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 832,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "control_video": [
          "IMAGE"
        ],
        "start_image": [
          "IMAGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": [
        "clip_vision_output",
        "start_image",
        "control_video"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "WanFunInpaintToVideo",
    "display_name": "WanFunInpaintToVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_wan",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 480,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 81,
            "max": 16384,
            "min": 1,
            "step": 4
          }
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 832,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "end_image": [
          "IMAGE"
        ],
        "start_image": [
          "IMAGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": [
        "clip_vision_output",
        "start_image",
        "end_image"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "WanImageToVideo",
    "display_name": "WanImageToVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_wan",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 480,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 81,
            "max": 16384,
            "min": 1,
            "step": 4
          }
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 832,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "start_image": [
          "IMAGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "width",
        "height",
        "length",
        "batch_size"
      ],
      "optional": [
        "clip_vision_output",
        "start_image"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "WanVaceToVideo",
    "display_name": "WanVaceToVideo",
    "description": "",
    "python_module": "comfy_extras.nodes_wan",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 480,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 81,
            "max": 16384,
            "min": 1,
            "step": 4
          }
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1000.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 832,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": {
        "control_masks": [
          "MASK"
        ],
        "control_video": [
          "IMAGE"
        ],
        "reference_image": [
          "IMAGE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "width",
        "height",
        "length",
        "batch_size",
        "strength"
      ],
      "optional": [
        "control_video",
        "control_masks",
        "reference_image"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT",
      "INT"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent",
      "trim_latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "WebcamCapture",
    "display_name": "Webcam Capture",
    "description": "",
    "python_module": "comfy_extras.nodes_webcam",
    "category": "image",
    "input": {
      "required": {
        "capture_on_queue": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "image": [
          "WEBCAM",
          {
            "tooltip": null
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "width",
        "height",
        "capture_on_queue"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "unCLIPCheckpointLoader",
    "display_name": "unCLIPCheckpointLoader",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "ckpt_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "ckpt_name"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "unCLIPConditioning",
    "display_name": "unCLIPConditioning",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "conditioning": [
          "CONDITIONING"
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "clip_vision_output",
        "strength",
        "noise_augmentation"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  }
]