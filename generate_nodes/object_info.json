[
  {
    "name": "AlignYourStepsScheduler",
    "display_name": "AlignYourStepsScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_align_your_steps",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model_type": [
          [
            "SD1",
            "SDXL",
            "SVD"
          ]
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 10,
            "max": 10000,
            "min": 10
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_type",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "BasicGuider",
    "display_name": "BasicGuider",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/guiders",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "conditioning"
      ],
      "optional": null
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GUIDER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "BasicScheduler",
    "display_name": "BasicScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "beta"
          ]
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "scheduler",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "BetaSamplingScheduler",
    "display_name": "BetaSamplingScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "alpha": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.6,
            "max": 50.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "beta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.6,
            "max": 50.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "steps",
        "alpha",
        "beta"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CFGGuider",
    "display_name": "CFGGuider",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/guiders",
    "input": {
      "required": {
        "cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "model": [
          "MODEL"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "positive",
        "negative",
        "cfg"
      ],
      "optional": null
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GUIDER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPLoader",
    "display_name": "Load CLIP",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "clip_name": [
          []
        ],
        "type": [
          [
            "stable_diffusion",
            "stable_cascade",
            "sd3",
            "stable_audio"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_name",
        "type"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPMergeAdd",
    "display_name": "CLIPMergeAdd",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip1",
        "clip2"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPMergeSimple",
    "display_name": "CLIPMergeSimple",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip1",
        "clip2",
        "ratio"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPMergeSubtract",
    "display_name": "CLIPMergeSubtract",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip1": [
          "CLIP"
        ],
        "clip2": [
          "CLIP"
        ],
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip1",
        "clip2",
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPSave",
    "display_name": "CLIPSave",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "clip/ComfyUI"
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "CLIPSetLastLayer",
    "display_name": "CLIP Set Last Layer",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "stop_at_clip_layer": [
          "INT",
          {
            "tooltip": null,
            "default": -1,
            "max": -1,
            "min": -24,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "stop_at_clip_layer"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncode",
    "display_name": "CLIP Text Encode (Prompt)",
    "description": "Encodes a text prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images.",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP",
          {
            "tooltip": "The CLIP model used for encoding the text."
          }
        ],
        "text": [
          "STRING",
          {
            "tooltip": "The text to be encoded.",
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "text",
        "clip"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": [
      "A conditioning containing the embedded text used to guide the diffusion model."
    ]
  },
  {
    "name": "CLIPTextEncodeFlux",
    "display_name": "CLIPTextEncodeFlux",
    "description": "",
    "python_module": "comfy_extras.nodes_flux",
    "category": "advanced/conditioning/flux",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "clip_l": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "guidance": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.5,
            "max": 100.0,
            "min": 0.0,
            "step": 0.1
          }
        ],
        "t5xxl": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "clip_l",
        "t5xxl",
        "guidance"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeHunyuanDiT",
    "display_name": "CLIPTextEncodeHunyuanDiT",
    "description": "",
    "python_module": "comfy_extras.nodes_hunyuan",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "bert": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "clip": [
          "CLIP"
        ],
        "mt5xl": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "bert",
        "mt5xl"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeSD3",
    "display_name": "CLIPTextEncodeSD3",
    "description": "",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "clip_g": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "clip_l": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "empty_padding": [
          [
            "none",
            "empty_prompt"
          ]
        ],
        "t5xxl": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip",
        "clip_l",
        "clip_g",
        "t5xxl",
        "empty_padding"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeSDXL",
    "display_name": "CLIPTextEncodeSDXL",
    "description": "",
    "python_module": "comfy_extras.nodes_clip_sdxl",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "crop_h": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0
          }
        ],
        "crop_w": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "target_height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "target_width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "text_g": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "text_l": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "crop_w",
        "crop_h",
        "target_width",
        "target_height",
        "text_g",
        "clip",
        "text_l"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPTextEncodeSDXLRefiner",
    "display_name": "CLIPTextEncodeSDXLRefiner",
    "description": "",
    "python_module": "comfy_extras.nodes_clip_sdxl",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "ascore": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 6.0,
            "max": 1000.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "clip": [
          "CLIP"
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ],
        "text": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024.0,
            "max": 16384,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "ascore",
        "width",
        "height",
        "text",
        "clip"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPVisionEncode",
    "display_name": "CLIP Vision Encode",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "image"
      ],
      "optional": null
    },
    "output": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION_OUTPUT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CLIPVisionLoader",
    "display_name": "Load CLIP Vision",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "clip_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_name"
      ],
      "optional": null
    },
    "output": [
      "CLIP_VISION"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP_VISION"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "Canny",
    "display_name": "Canny",
    "description": "",
    "python_module": "comfy_extras.nodes_canny",
    "category": "image/preprocessors",
    "input": {
      "required": {
        "high_threshold": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.8,
            "max": 0.99,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "image": [
          "IMAGE"
        ],
        "low_threshold": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.4,
            "max": 0.99,
            "min": 0.01,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "low_threshold",
        "high_threshold"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CheckpointLoader",
    "display_name": "Load Checkpoint With Config (DEPRECATED)",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "ckpt_name": [
          [
            "aura_flow_0.2.safetensors",
            "flux1-dev-fp8.safetensors",
            "sd_xl_base_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors"
          ]
        ],
        "config_name": [
          [
            "anything_v3.yaml",
            "v1-inference.yaml",
            "v1-inference_clip_skip_2.yaml",
            "v1-inference_clip_skip_2_fp16.yaml",
            "v1-inference_fp16.yaml",
            "v1-inpainting-inference.yaml",
            "v2-inference-v.yaml",
            "v2-inference-v_fp32.yaml",
            "v2-inference.yaml",
            "v2-inference_fp32.yaml",
            "v2-inpainting-inference.yaml"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "config_name",
        "ckpt_name"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CheckpointLoaderSimple",
    "display_name": "Load Checkpoint",
    "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "ckpt_name": [
          [
            "aura_flow_0.2.safetensors",
            "flux1-dev-fp8.safetensors",
            "sd_xl_base_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors"
          ],
          {
            "tooltip": "The name of the checkpoint (model) to load."
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "ckpt_name"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": [
      "The model used for denoising latents.",
      "The CLIP model used for encoding text prompts.",
      "The VAE model used for encoding and decoding images to and from latent space."
    ]
  },
  {
    "name": "CheckpointSave",
    "display_name": "Save Checkpoint",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "checkpoints/ComfyUI"
          }
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "clip",
        "vae",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "ConditioningAverage",
    "display_name": "ConditioningAverage",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning_from": [
          "CONDITIONING"
        ],
        "conditioning_to": [
          "CONDITIONING"
        ],
        "conditioning_to_strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning_to",
        "conditioning_from",
        "conditioning_to_strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningCombine",
    "display_name": "Conditioning (Combine)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning_1": [
          "CONDITIONING"
        ],
        "conditioning_2": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning_1",
        "conditioning_2"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningConcat",
    "display_name": "Conditioning (Concat)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning_from": [
          "CONDITIONING"
        ],
        "conditioning_to": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning_to",
        "conditioning_from"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetArea",
    "display_name": "Conditioning (Set Area)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 64,
            "max": 16384,
            "min": 64,
            "step": 8
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 64,
            "max": 16384,
            "min": 64,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "width",
        "height",
        "x",
        "y",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetAreaPercentage",
    "display_name": "Conditioning (Set Area with Percentage)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "height": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "width": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "x": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "y": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "width",
        "height",
        "x",
        "y",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetAreaStrength",
    "display_name": "ConditioningSetAreaStrength",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetMask",
    "display_name": "Conditioning (Set Mask)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "mask": [
          "MASK"
        ],
        "set_cond_area": [
          [
            "default",
            "mask bounds"
          ]
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "mask",
        "strength",
        "set_cond_area"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningSetTimestepRange",
    "display_name": "ConditioningSetTimestepRange",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "end": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "start": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "start",
        "end"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ConditioningZeroOut",
    "display_name": "ConditioningZeroOut",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/conditioning",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetApply",
    "display_name": "Apply ControlNet (OLD)",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "control_net": [
          "CONTROL_NET"
        ],
        "image": [
          "IMAGE"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "control_net",
        "image",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetApplyAdvanced",
    "display_name": "Apply ControlNet",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "image": [
          "IMAGE"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": {
        "vae": [
          "VAE"
        ]
      }
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "control_net",
        "image",
        "strength",
        "start_percent",
        "end_percent"
      ],
      "optional": [
        "vae"
      ]
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetApplySD3",
    "display_name": "Apply Controlnet with VAE",
    "description": "",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "image": [
          "IMAGE"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "control_net",
        "vae",
        "image",
        "strength",
        "start_percent",
        "end_percent"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetInpaintingAliMamaApply",
    "display_name": "ControlNetInpaintingAliMamaApply",
    "description": "",
    "python_module": "comfy_extras.nodes_controlnet",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "image": [
          "IMAGE"
        ],
        "mask": [
          "MASK"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "control_net",
        "vae",
        "image",
        "mask",
        "strength",
        "start_percent",
        "end_percent"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ControlNetLoader",
    "display_name": "Load ControlNet Model",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "control_net_name": [
          [
            "diffusion_pytorch_model.fp16.safetensors",
            "diffusion_pytorch_model_promax.safetensors",
            "flux_controlnet_union_pro.safetensors"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "control_net_name"
      ],
      "optional": null
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "CropMask",
    "display_name": "CropMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "mask": [
          "MASK"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask",
        "x",
        "y",
        "width",
        "height"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DiffControlNetLoader",
    "display_name": "Load ControlNet Model (diff)",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "control_net_name": [
          [
            "diffusion_pytorch_model.fp16.safetensors",
            "diffusion_pytorch_model_promax.safetensors",
            "flux_controlnet_union_pro.safetensors"
          ]
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "control_net_name"
      ],
      "optional": null
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DiffusersLoader",
    "display_name": "DiffusersLoader",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/loaders/deprecated",
    "input": {
      "required": {
        "model_path": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_path"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DisableNoise",
    "display_name": "DisableNoise",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/noise",
    "input": {
      "required": {},
      "optional": null
    },
    "input_order": {
      "required": [],
      "optional": null
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DualCFGGuider",
    "display_name": "DualCFGGuider",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/guiders",
    "input": {
      "required": {
        "cfg_cond2_negative": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "cfg_conds": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "cond1": [
          "CONDITIONING"
        ],
        "cond2": [
          "CONDITIONING"
        ],
        "model": [
          "MODEL"
        ],
        "negative": [
          "CONDITIONING"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "cond1",
        "cond2",
        "negative",
        "cfg_conds",
        "cfg_cond2_negative"
      ],
      "optional": null
    },
    "output": [
      "GUIDER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GUIDER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "DualCLIPLoader",
    "display_name": "DualCLIPLoader",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "clip_name1": [
          []
        ],
        "clip_name2": [
          []
        ],
        "type": [
          [
            "sdxl",
            "sd3",
            "flux"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_name1",
        "clip_name2",
        "type"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyImage",
    "display_name": "EmptyImage",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "color": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "display": "color",
            "max": 16777215,
            "min": 0,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "batch_size",
        "color"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyLatentAudio",
    "display_name": "EmptyLatentAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "latent/audio",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": "The number of latent images in the batch.",
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "seconds": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 47.6,
            "max": 1000.0,
            "min": 1.0,
            "step": 0.1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "seconds",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "EmptyLatentImage",
    "display_name": "Empty Latent Image",
    "description": "Create a new batch of empty latent images to be denoised via sampling.",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": "The number of latent images in the batch.",
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": "The height of the latent images in pixels.",
            "default": 512,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": "The width of the latent images in pixels.",
            "default": 512,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": [
      "The empty latent image batch."
    ]
  },
  {
    "name": "EmptySD3LatentImage",
    "display_name": "EmptySD3LatentImage",
    "description": "",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "latent/sd3",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 16
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ExponentialScheduler",
    "display_name": "ExponentialScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 14.614642,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0291675,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "sigma_max",
        "sigma_min"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FeatherMask",
    "display_name": "FeatherMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "bottom": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "left": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "mask": [
          "MASK"
        ],
        "right": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "top": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask",
        "left",
        "top",
        "right",
        "bottom"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FlipSigmas",
    "display_name": "FlipSigmas",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/sigmas",
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sigmas"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FluxGuidance",
    "display_name": "FluxGuidance",
    "description": "",
    "python_module": "comfy_extras.nodes_flux",
    "category": "advanced/conditioning/flux",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "guidance": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.5,
            "max": 100.0,
            "min": 0.0,
            "step": 0.1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "guidance"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FreeU",
    "display_name": "FreeU",
    "description": "",
    "python_module": "comfy_extras.nodes_freelunch",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "b1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.1,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.2,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "s1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.9,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.2,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "b1",
        "b2",
        "s1",
        "s2"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "FreeU_V2",
    "display_name": "FreeU_V2",
    "description": "",
    "python_module": "comfy_extras.nodes_freelunch",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "b1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.3,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "b2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.4,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "s1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.9,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "s2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.2,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "b1",
        "b2",
        "s1",
        "s2"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GITSScheduler",
    "display_name": "GITSScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_gits",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "coeff": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.2,
            "max": 1.5,
            "min": 0.8,
            "step": 0.05
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 10,
            "max": 1000,
            "min": 2
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "coeff",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GLIGENLoader",
    "display_name": "GLIGENLoader",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "gligen_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "gligen_name"
      ],
      "optional": null
    },
    "output": [
      "GLIGEN"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "GLIGEN"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GLIGENTextBoxApply",
    "display_name": "GLIGENTextBoxApply",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/gligen",
    "input": {
      "required": {
        "clip": [
          "CLIP"
        ],
        "conditioning_to": [
          "CONDITIONING"
        ],
        "gligen_textbox_model": [
          "GLIGEN"
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 64,
            "max": 16384,
            "min": 8,
            "step": 8
          }
        ],
        "text": [
          "STRING",
          {
            "tooltip": null,
            "dynamicPrompts": true,
            "multiline": true
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 64,
            "max": 16384,
            "min": 8,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning_to",
        "clip",
        "gligen_textbox_model",
        "text",
        "width",
        "height",
        "x",
        "y"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "GrowMask",
    "display_name": "GrowMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "expand": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": -16384,
            "step": 1
          }
        ],
        "mask": [
          "MASK"
        ],
        "tapered_corners": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask",
        "expand",
        "tapered_corners"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "HyperTile",
    "display_name": "HyperTile",
    "description": "",
    "python_module": "comfy_extras.nodes_hypertile",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "max_depth": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 10,
            "min": 0
          }
        ],
        "model": [
          "MODEL"
        ],
        "scale_depth": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ],
        "swap_size": [
          "INT",
          {
            "tooltip": null,
            "default": 2,
            "max": 128,
            "min": 1
          }
        ],
        "tile_size": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 2048,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "tile_size",
        "swap_size",
        "max_depth",
        "scale_depth"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "HypernetworkLoader",
    "display_name": "HypernetworkLoader",
    "description": "",
    "python_module": "comfy_extras.nodes_hypernetwork",
    "category": "loaders",
    "input": {
      "required": {
        "hypernetwork_name": [
          []
        ],
        "model": [
          "MODEL"
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "hypernetwork_name",
        "strength"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageBatch",
    "display_name": "Batch Images",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image1",
        "image2"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageBlend",
    "display_name": "ImageBlend",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "blend_factor": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "blend_mode": [
          [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "soft_light",
            "difference"
          ]
        ],
        "image1": [
          "IMAGE"
        ],
        "image2": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image1",
        "image2",
        "blend_factor",
        "blend_mode"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageBlur",
    "display_name": "ImageBlur",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "blur_radius": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 31,
            "min": 1,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "sigma": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.1,
            "step": 0.1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "blur_radius",
        "sigma"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageColorToMask",
    "display_name": "ImageColorToMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "color": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "display": "color",
            "max": 16777215,
            "min": 0,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "color"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageCompositeMasked",
    "display_name": "ImageCompositeMasked",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "image",
    "input": {
      "required": {
        "destination": [
          "IMAGE"
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ],
        "source": [
          "IMAGE"
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "input_order": {
      "required": [
        "destination",
        "source",
        "x",
        "y",
        "resize_source"
      ],
      "optional": [
        "mask"
      ]
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageCrop",
    "display_name": "ImageCrop",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/transform",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "width",
        "height",
        "x",
        "y"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageFromBatch",
    "display_name": "ImageFromBatch",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/batch",
    "input": {
      "required": {
        "batch_index": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 4095,
            "min": 0
          }
        ],
        "image": [
          "IMAGE"
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "batch_index",
        "length"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageInvert",
    "display_name": "Invert Image",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageOnlyCheckpointLoader",
    "display_name": "Image Only Checkpoint Loader (img2vid model)",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "loaders/video_models",
    "input": {
      "required": {
        "ckpt_name": [
          [
            "aura_flow_0.2.safetensors",
            "flux1-dev-fp8.safetensors",
            "sd_xl_base_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "ckpt_name"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP_VISION",
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageOnlyCheckpointSave",
    "display_name": "ImageOnlyCheckpointSave",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "checkpoints/ComfyUI"
          }
        ],
        "model": [
          "MODEL"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "clip_vision",
        "vae",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "ImagePadForOutpaint",
    "display_name": "Pad Image for Outpainting",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "bottom": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "feathering": [
          "INT",
          {
            "tooltip": null,
            "default": 40,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "left": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "right": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "top": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "left",
        "top",
        "right",
        "bottom",
        "feathering"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageQuantize",
    "display_name": "ImageQuantize",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "colors": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 256,
            "min": 1,
            "step": 1
          }
        ],
        "dither": [
          [
            "none",
            "floyd-steinberg",
            "bayer-2",
            "bayer-4",
            "bayer-8",
            "bayer-16"
          ]
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "colors",
        "dither"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageScale",
    "display_name": "Upscale Image",
    "description": "",
    "python_module": "nodes",
    "category": "image/upscaling",
    "input": {
      "required": {
        "crop": [
          [
            "disabled",
            "center"
          ]
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "upscale_method",
        "width",
        "height",
        "crop"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageScaleBy",
    "display_name": "Upscale Image By",
    "description": "",
    "python_module": "nodes",
    "category": "image/upscaling",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "scale_by": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 8.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "upscale_method",
        "scale_by"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageScaleToTotalPixels",
    "display_name": "ImageScaleToTotalPixels",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/upscaling",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "megapixels": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 16.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "lanczos"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "upscale_method",
        "megapixels"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageSharpen",
    "display_name": "ImageSharpen",
    "description": "",
    "python_module": "comfy_extras.nodes_post_processing",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "alpha": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 5.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "image": [
          "IMAGE"
        ],
        "sharpen_radius": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 31,
            "min": 1,
            "step": 1
          }
        ],
        "sigma": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.1,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "sharpen_radius",
        "sigma",
        "alpha"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageToMask",
    "display_name": "Convert Image to Mask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "channel": [
          [
            "red",
            "green",
            "blue",
            "alpha"
          ]
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "channel"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ImageUpscaleWithModel",
    "display_name": "Upscale Image (using Model)",
    "description": "",
    "python_module": "comfy_extras.nodes_upscale_model",
    "category": "image/upscaling",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "upscale_model": [
          "UPSCALE_MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "upscale_model",
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "InpaintModelConditioning",
    "display_name": "InpaintModelConditioning",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/inpaint",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "pixels": [
          "IMAGE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "pixels",
        "mask"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "InstructPixToPixConditioning",
    "display_name": "InstructPixToPixConditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_ip2p",
    "category": "conditioning/instructpix2pix",
    "input": {
      "required": {
        "negative": [
          "CONDITIONING"
        ],
        "pixels": [
          "IMAGE"
        ],
        "positive": [
          "CONDITIONING"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "positive",
        "negative",
        "vae",
        "pixels"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "InvertMask",
    "display_name": "InvertMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "JoinImageWithAlpha",
    "display_name": "Join Image with Alpha",
    "description": "",
    "python_module": "comfy_extras.nodes_compositing",
    "category": "mask/compositing",
    "input": {
      "required": {
        "alpha": [
          "MASK"
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "alpha"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "KSampler",
    "display_name": "KSampler",
    "description": "Uses the provided model, positive and negative conditioning to denoise the latent image.",
    "python_module": "nodes",
    "category": "sampling",
    "input": {
      "required": {
        "cfg": [
          "FLOAT",
          {
            "tooltip": "The Classifier-Free Guidance scale balances creativity and adherence to the prompt. Higher values result in images more closely matching the prompt however too high values will negatively impact quality.",
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "denoise": [
          "FLOAT",
          {
            "tooltip": "The amount of denoising applied, lower values will maintain the structure of the initial image allowing for image to image sampling.",
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "latent_image": [
          "LATENT",
          {
            "tooltip": "The latent image to denoise."
          }
        ],
        "model": [
          "MODEL",
          {
            "tooltip": "The model used for denoising the input latent."
          }
        ],
        "negative": [
          "CONDITIONING",
          {
            "tooltip": "The conditioning describing the attributes you want to exclude from the image."
          }
        ],
        "positive": [
          "CONDITIONING",
          {
            "tooltip": "The conditioning describing the attributes you want to include in the image."
          }
        ],
        "sampler_name": [
          [
            "euler",
            "euler_cfg_pp",
            "euler_ancestral",
            "euler_ancestral_cfg_pp",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_2s_ancestral_cfg_pp",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_cfg_pp",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ipndm",
            "ipndm_v",
            "deis",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ],
          {
            "tooltip": "The algorithm used when sampling, this can affect the quality, speed, and style of the generated output."
          }
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "beta"
          ],
          {
            "tooltip": "The scheduler controls how noise is gradually removed to form the image."
          }
        ],
        "seed": [
          "INT",
          {
            "tooltip": "The random seed used for creating the noise.",
            "default": 0,
            "max": 18446744073709551615,
            "min": 0
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": "The number of steps used in the denoising process.",
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "seed",
        "steps",
        "cfg",
        "sampler_name",
        "scheduler",
        "positive",
        "negative",
        "latent_image",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": [
      "The denoised latent."
    ]
  },
  {
    "name": "KSamplerAdvanced",
    "display_name": "KSampler (Advanced)",
    "description": "",
    "python_module": "nodes",
    "category": "sampling",
    "input": {
      "required": {
        "add_noise": [
          [
            "enable",
            "disable"
          ]
        ],
        "cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "end_at_step": [
          "INT",
          {
            "tooltip": null,
            "default": 10000,
            "max": 10000,
            "min": 0
          }
        ],
        "latent_image": [
          "LATENT"
        ],
        "model": [
          "MODEL"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "noise_seed": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 18446744073709551615,
            "min": 0
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "return_with_leftover_noise": [
          [
            "disable",
            "enable"
          ]
        ],
        "sampler_name": [
          [
            "euler",
            "euler_cfg_pp",
            "euler_ancestral",
            "euler_ancestral_cfg_pp",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_2s_ancestral_cfg_pp",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_cfg_pp",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ipndm",
            "ipndm_v",
            "deis",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ],
        "scheduler": [
          [
            "normal",
            "karras",
            "exponential",
            "sgm_uniform",
            "simple",
            "ddim_uniform",
            "beta"
          ]
        ],
        "start_at_step": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 10000,
            "min": 0
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "add_noise",
        "noise_seed",
        "steps",
        "cfg",
        "sampler_name",
        "scheduler",
        "positive",
        "negative",
        "latent_image",
        "start_at_step",
        "end_at_step",
        "return_with_leftover_noise"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "KSamplerSelect",
    "display_name": "KSamplerSelect",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "sampler_name": [
          [
            "euler",
            "euler_cfg_pp",
            "euler_ancestral",
            "euler_ancestral_cfg_pp",
            "heun",
            "heunpp2",
            "dpm_2",
            "dpm_2_ancestral",
            "lms",
            "dpm_fast",
            "dpm_adaptive",
            "dpmpp_2s_ancestral",
            "dpmpp_2s_ancestral_cfg_pp",
            "dpmpp_sde",
            "dpmpp_sde_gpu",
            "dpmpp_2m",
            "dpmpp_2m_cfg_pp",
            "dpmpp_2m_sde",
            "dpmpp_2m_sde_gpu",
            "dpmpp_3m_sde",
            "dpmpp_3m_sde_gpu",
            "ddpm",
            "lcm",
            "ipndm",
            "ipndm_v",
            "deis",
            "ddim",
            "uni_pc",
            "uni_pc_bh2"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sampler_name"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "KarrasScheduler",
    "display_name": "KarrasScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "rho": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 7.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 14.614642,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0291675,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "sigma_max",
        "sigma_min",
        "rho"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LaplaceScheduler",
    "display_name": "LaplaceScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "beta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 10.0,
            "min": 0.0,
            "round": false,
            "step": 0.1
          }
        ],
        "mu": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 10.0,
            "min": -10.0,
            "round": false,
            "step": 0.1
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 14.614642,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0291675,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "sigma_max",
        "sigma_min",
        "mu",
        "beta"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentAdd",
    "display_name": "LatentAdd",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples1",
        "samples2"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentBatch",
    "display_name": "LatentBatch",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/batch",
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples1",
        "samples2"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentBatchSeedBehavior",
    "display_name": "LatentBatchSeedBehavior",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "seed_behavior": [
          [
            "random",
            "fixed"
          ],
          {
            "tooltip": null,
            "default": "fixed"
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "seed_behavior"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentComposite",
    "display_name": "Latent Composite",
    "description": "",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "feather": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "samples_from": [
          "LATENT"
        ],
        "samples_to": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples_to",
        "samples_from",
        "x",
        "y",
        "feather"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentCompositeMasked",
    "display_name": "LatentCompositeMasked",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "latent",
    "input": {
      "required": {
        "destination": [
          "LATENT"
        ],
        "resize_source": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ],
        "source": [
          "LATENT"
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": {
        "mask": [
          "MASK"
        ]
      }
    },
    "input_order": {
      "required": [
        "destination",
        "source",
        "x",
        "y",
        "resize_source"
      ],
      "optional": [
        "mask"
      ]
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentCrop",
    "display_name": "Crop Latent",
    "description": "",
    "python_module": "nodes",
    "category": "latent/transform",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 64,
            "step": 8
          }
        ],
        "samples": [
          "LATENT"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 64,
            "step": 8
          }
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "width",
        "height",
        "x",
        "y"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentFlip",
    "display_name": "Flip Latent",
    "description": "",
    "python_module": "nodes",
    "category": "latent/transform",
    "input": {
      "required": {
        "flip_method": [
          [
            "x-axis: vertically",
            "y-axis: horizontally"
          ]
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "flip_method"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentFromBatch",
    "display_name": "Latent From Batch",
    "description": "",
    "python_module": "nodes",
    "category": "latent/batch",
    "input": {
      "required": {
        "batch_index": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 63,
            "min": 0
          }
        ],
        "length": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 64,
            "min": 1
          }
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "batch_index",
        "length"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentInterpolate",
    "display_name": "LatentInterpolate",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples1",
        "samples2",
        "ratio"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentMultiply",
    "display_name": "LatentMultiply",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentRotate",
    "display_name": "Rotate Latent",
    "description": "",
    "python_module": "nodes",
    "category": "latent/transform",
    "input": {
      "required": {
        "rotation": [
          [
            "none",
            "90 degrees",
            "180 degrees",
            "270 degrees"
          ]
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "rotation"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentSubtract",
    "display_name": "LatentSubtract",
    "description": "",
    "python_module": "comfy_extras.nodes_latent",
    "category": "latent/advanced",
    "input": {
      "required": {
        "samples1": [
          "LATENT"
        ],
        "samples2": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples1",
        "samples2"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentUpscale",
    "display_name": "Upscale Latent",
    "description": "",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "crop": [
          [
            "disabled",
            "center"
          ]
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ],
        "samples": [
          "LATENT"
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 0,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "upscale_method",
        "width",
        "height",
        "crop"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LatentUpscaleBy",
    "display_name": "Upscale Latent By",
    "description": "",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "scale_by": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.5,
            "max": 8.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "upscale_method": [
          [
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic",
            "bislerp"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "upscale_method",
        "scale_by"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoadAudio",
    "display_name": "LoadAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "audio",
    "input": {
      "required": {
        "audio": [
          [],
          {
            "tooltip": null,
            "audio_upload": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "audio"
      ],
      "optional": null
    },
    "output": [
      "AUDIO"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AUDIO"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoadImage",
    "display_name": "Load Image",
    "description": "",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "image": [
          [
            "Image0017.png",
            "blob",
            "comfy-maze-depth.png",
            "comfy-maze-splat.png",
            "comfy-maze.png",
            "depth_output.png",
            "example.png",
            "mask_output.png",
            "render_output.png"
          ],
          {
            "tooltip": null,
            "image_upload": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoadImageMask",
    "display_name": "Load Image (as Mask)",
    "description": "",
    "python_module": "nodes",
    "category": "mask",
    "input": {
      "required": {
        "channel": [
          [
            "alpha",
            "red",
            "green",
            "blue"
          ]
        ],
        "image": [
          [
            "Image0017.png",
            "blob",
            "comfy-maze-depth.png",
            "comfy-maze-splat.png",
            "comfy-maze.png",
            "depth_output.png",
            "example.png",
            "mask_output.png",
            "render_output.png"
          ],
          {
            "tooltip": null,
            "image_upload": true
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "channel"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "LoraLoader",
    "display_name": "Load LoRA",
    "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "clip": [
          "CLIP",
          {
            "tooltip": "The CLIP model the LoRA will be applied to."
          }
        ],
        "lora_name": [
          [
            "Hyper-FLUX.1-dev-8steps-lora.safetensors",
            "Hyper-SDXL-1step-lora.safetensors",
            "Little_Tinies.safetensors",
            "araminta_k_flux_koda.safetensors",
            "flux_tarot_v1_lora.safetensors",
            "pixel-art-xl.safetensors",
            "vintage-ads-flux-1350.safetensors"
          ],
          {
            "tooltip": "The name of the LoRA."
          }
        ],
        "model": [
          "MODEL",
          {
            "tooltip": "The diffusion model the LoRA will be applied to."
          }
        ],
        "strength_clip": [
          "FLOAT",
          {
            "tooltip": "How strongly to modify the CLIP model. This value can be negative.",
            "default": 1.0,
            "max": 100.0,
            "min": -100.0,
            "step": 0.01
          }
        ],
        "strength_model": [
          "FLOAT",
          {
            "tooltip": "How strongly to modify the diffusion model. This value can be negative.",
            "default": 1.0,
            "max": 100.0,
            "min": -100.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "clip",
        "lora_name",
        "strength_model",
        "strength_clip"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": [
      "The modified diffusion model.",
      "The modified CLIP model."
    ]
  },
  {
    "name": "LoraLoaderModelOnly",
    "display_name": "LoraLoaderModelOnly",
    "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "lora_name": [
          [
            "Hyper-FLUX.1-dev-8steps-lora.safetensors",
            "Hyper-SDXL-1step-lora.safetensors",
            "Little_Tinies.safetensors",
            "araminta_k_flux_koda.safetensors",
            "flux_tarot_v1_lora.safetensors",
            "pixel-art-xl.safetensors",
            "vintage-ads-flux-1350.safetensors"
          ]
        ],
        "model": [
          "MODEL"
        ],
        "strength_model": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": -100.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "lora_name",
        "strength_model"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": [
      "The modified diffusion model.",
      "The modified CLIP model."
    ]
  },
  {
    "name": "MaskComposite",
    "display_name": "MaskComposite",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "destination": [
          "MASK"
        ],
        "operation": [
          [
            "multiply",
            "add",
            "subtract",
            "and",
            "or",
            "xor"
          ]
        ],
        "source": [
          "MASK"
        ],
        "x": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "y": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "destination",
        "source",
        "x",
        "y",
        "operation"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "MaskToImage",
    "display_name": "Convert Mask to Image",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeAdd",
    "display_name": "ModelMergeAdd",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeBlocks",
    "display_name": "ModelMergeBlocks",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "input": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "out": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "input",
        "middle",
        "out"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeFlux1",
    "display_name": "ModelMergeFlux1",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "double_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "double_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_layer.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "guidance_in": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "img_in.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "single_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.24.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.25.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.26.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.27.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.28.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.29.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.30.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.31.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.32.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.33.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.34.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.35.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.36.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.37.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "single_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_in.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "txt_in.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "vector_in.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "img_in.",
        "time_in.",
        "guidance_in",
        "vector_in.",
        "txt_in.",
        "double_blocks.0.",
        "double_blocks.1.",
        "double_blocks.2.",
        "double_blocks.3.",
        "double_blocks.4.",
        "double_blocks.5.",
        "double_blocks.6.",
        "double_blocks.7.",
        "double_blocks.8.",
        "double_blocks.9.",
        "double_blocks.10.",
        "double_blocks.11.",
        "double_blocks.12.",
        "double_blocks.13.",
        "double_blocks.14.",
        "double_blocks.15.",
        "double_blocks.16.",
        "double_blocks.17.",
        "double_blocks.18.",
        "single_blocks.0.",
        "single_blocks.1.",
        "single_blocks.2.",
        "single_blocks.3.",
        "single_blocks.4.",
        "single_blocks.5.",
        "single_blocks.6.",
        "single_blocks.7.",
        "single_blocks.8.",
        "single_blocks.9.",
        "single_blocks.10.",
        "single_blocks.11.",
        "single_blocks.12.",
        "single_blocks.13.",
        "single_blocks.14.",
        "single_blocks.15.",
        "single_blocks.16.",
        "single_blocks.17.",
        "single_blocks.18.",
        "single_blocks.19.",
        "single_blocks.20.",
        "single_blocks.21.",
        "single_blocks.22.",
        "single_blocks.23.",
        "single_blocks.24.",
        "single_blocks.25.",
        "single_blocks.26.",
        "single_blocks.27.",
        "single_blocks.28.",
        "single_blocks.29.",
        "single_blocks.30.",
        "single_blocks.31.",
        "single_blocks.32.",
        "single_blocks.33.",
        "single_blocks.34.",
        "single_blocks.35.",
        "single_blocks.36.",
        "single_blocks.37.",
        "final_layer."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSD1",
    "display_name": "ModelMergeSD1",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "input_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "out.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "time_embed.",
        "label_emb.",
        "input_blocks.0.",
        "input_blocks.1.",
        "input_blocks.2.",
        "input_blocks.3.",
        "input_blocks.4.",
        "input_blocks.5.",
        "input_blocks.6.",
        "input_blocks.7.",
        "input_blocks.8.",
        "input_blocks.9.",
        "input_blocks.10.",
        "input_blocks.11.",
        "middle_block.0.",
        "middle_block.1.",
        "middle_block.2.",
        "output_blocks.0.",
        "output_blocks.1.",
        "output_blocks.2.",
        "output_blocks.3.",
        "output_blocks.4.",
        "output_blocks.5.",
        "output_blocks.6.",
        "output_blocks.7.",
        "output_blocks.8.",
        "output_blocks.9.",
        "output_blocks.10.",
        "output_blocks.11.",
        "out."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSD2",
    "display_name": "ModelMergeSD2",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "input_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "out.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "time_embed.",
        "label_emb.",
        "input_blocks.0.",
        "input_blocks.1.",
        "input_blocks.2.",
        "input_blocks.3.",
        "input_blocks.4.",
        "input_blocks.5.",
        "input_blocks.6.",
        "input_blocks.7.",
        "input_blocks.8.",
        "input_blocks.9.",
        "input_blocks.10.",
        "input_blocks.11.",
        "middle_block.0.",
        "middle_block.1.",
        "middle_block.2.",
        "output_blocks.0.",
        "output_blocks.1.",
        "output_blocks.2.",
        "output_blocks.3.",
        "output_blocks.4.",
        "output_blocks.5.",
        "output_blocks.6.",
        "output_blocks.7.",
        "output_blocks.8.",
        "output_blocks.9.",
        "output_blocks.10.",
        "output_blocks.11.",
        "out."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSD3_2B",
    "display_name": "ModelMergeSD3_2B",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "context_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "final_layer.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.0.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.1.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.10.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.11.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.12.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.13.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.14.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.15.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.16.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.17.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.18.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.19.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.2.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.20.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.21.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.22.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.23.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.3.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.4.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.5.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.6.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.7.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.8.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "joint_blocks.9.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "pos_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "t_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "x_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "y_embedder.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "pos_embed.",
        "x_embedder.",
        "context_embedder.",
        "y_embedder.",
        "t_embedder.",
        "joint_blocks.0.",
        "joint_blocks.1.",
        "joint_blocks.2.",
        "joint_blocks.3.",
        "joint_blocks.4.",
        "joint_blocks.5.",
        "joint_blocks.6.",
        "joint_blocks.7.",
        "joint_blocks.8.",
        "joint_blocks.9.",
        "joint_blocks.10.",
        "joint_blocks.11.",
        "joint_blocks.12.",
        "joint_blocks.13.",
        "joint_blocks.14.",
        "joint_blocks.15.",
        "joint_blocks.16.",
        "joint_blocks.17.",
        "joint_blocks.18.",
        "joint_blocks.19.",
        "joint_blocks.20.",
        "joint_blocks.21.",
        "joint_blocks.22.",
        "joint_blocks.23.",
        "final_layer."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSDXL",
    "display_name": "ModelMergeSDXL",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging_model_specific",
    "category": "advanced/model_merging/model_specific",
    "input": {
      "required": {
        "input_blocks.0": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.3": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.4": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.5": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.6": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.7": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "input_blocks.8": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "label_emb.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.0": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "middle_block.2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "out.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.0": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.1": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.2": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.3": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.4": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.5": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.6": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.7": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "output_blocks.8": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "time_embed.": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "time_embed.",
        "label_emb.",
        "input_blocks.0",
        "input_blocks.1",
        "input_blocks.2",
        "input_blocks.3",
        "input_blocks.4",
        "input_blocks.5",
        "input_blocks.6",
        "input_blocks.7",
        "input_blocks.8",
        "middle_block.0",
        "middle_block.1",
        "middle_block.2",
        "output_blocks.0",
        "output_blocks.1",
        "output_blocks.2",
        "output_blocks.3",
        "output_blocks.4",
        "output_blocks.5",
        "output_blocks.6",
        "output_blocks.7",
        "output_blocks.8",
        "out."
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSimple",
    "display_name": "ModelMergeSimple",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "ratio"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelMergeSubtract",
    "display_name": "ModelMergeSubtract",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "model1": [
          "MODEL"
        ],
        "model2": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model1",
        "model2",
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingAuraFlow",
    "display_name": "ModelSamplingAuraFlow",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.73,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "shift"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingContinuousEDM",
    "display_name": "ModelSamplingContinuousEDM",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "v_prediction",
            "edm_playground_v2.5",
            "eps"
          ]
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 120.0,
            "max": 1000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.002,
            "max": 1000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "sampling",
        "sigma_max",
        "sigma_min"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingContinuousV",
    "display_name": "ModelSamplingContinuousV",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "v_prediction"
          ]
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 500.0,
            "max": 1000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.03,
            "max": 1000.0,
            "min": 0.0,
            "round": false,
            "step": 0.001
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "sampling",
        "sigma_max",
        "sigma_min"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingDiscrete",
    "display_name": "ModelSamplingDiscrete",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "sampling": [
          [
            "eps",
            "v_prediction",
            "lcm",
            "x0"
          ]
        ],
        "zsnr": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": false
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "sampling",
        "zsnr"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingFlux",
    "display_name": "ModelSamplingFlux",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "base_shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "max_shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.15,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "max_shift",
        "base_shift",
        "width",
        "height"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingSD3",
    "display_name": "ModelSamplingSD3",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.0,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "shift"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSamplingStableCascade",
    "display_name": "ModelSamplingStableCascade",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "shift": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 2.0,
            "max": 100.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "shift"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ModelSave",
    "display_name": "ModelSave",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "diffusion_models/ComfyUI"
          }
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "Morphology",
    "display_name": "ImageMorphology",
    "description": "",
    "python_module": "comfy_extras.nodes_morphology",
    "category": "image/postprocessing",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ],
        "kernel_size": [
          "INT",
          {
            "tooltip": null,
            "default": 3,
            "max": 999,
            "min": 3,
            "step": 1
          }
        ],
        "operation": [
          [
            "erode",
            "dilate",
            "open",
            "close",
            "gradient",
            "bottom_hat",
            "top_hat"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "operation",
        "kernel_size"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PatchModelAddDownscale",
    "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
    "description": "",
    "python_module": "comfy_extras.nodes_model_downscale",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "block_number": [
          "INT",
          {
            "tooltip": null,
            "default": 3,
            "max": 32,
            "min": 1,
            "step": 1
          }
        ],
        "downscale_after_skip": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "downscale_factor": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 2.0,
            "max": 9.0,
            "min": 0.1,
            "step": 0.001
          }
        ],
        "downscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ],
        "end_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.35,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "model": [
          "MODEL"
        ],
        "start_percent": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "upscale_method": [
          [
            "bicubic",
            "nearest-exact",
            "bilinear",
            "area",
            "bislerp"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "block_number",
        "downscale_factor",
        "start_percent",
        "end_percent",
        "downscale_after_skip",
        "downscale_method",
        "upscale_method"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PerturbedAttentionGuidance",
    "display_name": "PerturbedAttentionGuidance",
    "description": "",
    "python_module": "comfy_extras.nodes_pag",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "scale": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 3.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "scale"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PolyexponentialScheduler",
    "display_name": "PolyexponentialScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "rho": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_max": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 14.614642,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "sigma_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0291675,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "sigma_max",
        "sigma_min",
        "rho"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PorterDuffImageComposite",
    "display_name": "Porter-Duff Image Composite",
    "description": "",
    "python_module": "comfy_extras.nodes_compositing",
    "category": "mask/compositing",
    "input": {
      "required": {
        "destination": [
          "IMAGE"
        ],
        "destination_alpha": [
          "MASK"
        ],
        "mode": [
          [
            "ADD",
            "CLEAR",
            "DARKEN",
            "DST",
            "DST_ATOP",
            "DST_IN",
            "DST_OUT",
            "DST_OVER",
            "LIGHTEN",
            "MULTIPLY",
            "OVERLAY",
            "SCREEN",
            "SRC",
            "SRC_ATOP",
            "SRC_IN",
            "SRC_OUT",
            "SRC_OVER",
            "XOR"
          ],
          {
            "tooltip": null,
            "default": "DST"
          }
        ],
        "source": [
          "IMAGE"
        ],
        "source_alpha": [
          "MASK"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "source",
        "source_alpha",
        "destination",
        "destination_alpha",
        "mode"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "PreviewAudio",
    "display_name": "PreviewAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "audio",
    "input": {
      "required": {
        "audio": [
          "AUDIO"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "audio"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "PreviewImage",
    "display_name": "Preview Image",
    "description": "Saves the input images to your ComfyUI output directory.",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "RandomNoise",
    "display_name": "RandomNoise",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/noise",
    "input": {
      "required": {
        "noise_seed": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 18446744073709551615,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "noise_seed"
      ],
      "optional": null
    },
    "output": [
      "NOISE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "NOISE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RebatchImages",
    "display_name": "Rebatch Images",
    "description": "",
    "python_module": "comfy_extras.nodes_rebatch",
    "category": "image/batch",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "images": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RebatchLatents",
    "display_name": "Rebatch Latents",
    "description": "",
    "python_module": "comfy_extras.nodes_rebatch",
    "category": "latent/batch",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "latents": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "latents",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      true
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RepeatImageBatch",
    "display_name": "RepeatImageBatch",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/batch",
    "input": {
      "required": {
        "amount": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "amount"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RepeatLatentBatch",
    "display_name": "Repeat Latent Batch",
    "description": "",
    "python_module": "nodes",
    "category": "latent/batch",
    "input": {
      "required": {
        "amount": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 64,
            "min": 1
          }
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "amount"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "RescaleCFG",
    "display_name": "RescaleCFG",
    "description": "",
    "python_module": "comfy_extras.nodes_model_advanced",
    "category": "advanced/model",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "multiplier": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.7,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "multiplier"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SDTurboScheduler",
    "display_name": "SDTurboScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0,
            "step": 0.01
          }
        ],
        "model": [
          "MODEL"
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 10,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "steps",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SD_4XUpscale_Conditioning",
    "display_name": "SD_4XUpscale_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_sdupscale",
    "category": "conditioning/upscale_diffusion",
    "input": {
      "required": {
        "images": [
          "IMAGE"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.001
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "scale_ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 4.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "positive",
        "negative",
        "scale_ratio",
        "noise_augmentation"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SV3D_Conditioning",
    "display_name": "SV3D_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_stable3d",
    "category": "conditioning/3d_models",
    "input": {
      "required": {
        "clip_vision": [
          "CLIP_VISION"
        ],
        "elevation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 90.0,
            "min": -90.0,
            "round": false,
            "step": 0.1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 576,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "video_frames": [
          "INT",
          {
            "tooltip": null,
            "default": 21,
            "max": 4096,
            "min": 1
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 576,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "init_image",
        "vae",
        "width",
        "height",
        "video_frames",
        "elevation"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SVD_img2vid_Conditioning",
    "display_name": "SVD_img2vid_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "conditioning/video_models",
    "input": {
      "required": {
        "augmentation_level": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 10.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "fps": [
          "INT",
          {
            "tooltip": null,
            "default": 6,
            "max": 1024,
            "min": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 576,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "motion_bucket_id": [
          "INT",
          {
            "tooltip": null,
            "default": 127,
            "max": 1023,
            "min": 1
          }
        ],
        "vae": [
          "VAE"
        ],
        "video_frames": [
          "INT",
          {
            "tooltip": null,
            "default": 14,
            "max": 4096,
            "min": 1
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "init_image",
        "vae",
        "width",
        "height",
        "video_frames",
        "motion_bucket_id",
        "fps",
        "augmentation_level"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerCustom",
    "display_name": "SamplerCustom",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling",
    "input": {
      "required": {
        "add_noise": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 8.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.1
          }
        ],
        "latent_image": [
          "LATENT"
        ],
        "model": [
          "MODEL"
        ],
        "negative": [
          "CONDITIONING"
        ],
        "noise_seed": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 18446744073709551615,
            "min": 0
          }
        ],
        "positive": [
          "CONDITIONING"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "add_noise",
        "noise_seed",
        "cfg",
        "positive",
        "negative",
        "sampler",
        "sigmas",
        "latent_image"
      ],
      "optional": null
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerCustomAdvanced",
    "display_name": "SamplerCustomAdvanced",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling",
    "input": {
      "required": {
        "guider": [
          "GUIDER"
        ],
        "latent_image": [
          "LATENT"
        ],
        "noise": [
          "NOISE"
        ],
        "sampler": [
          "SAMPLER"
        ],
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "noise",
        "guider",
        "sampler",
        "sigmas",
        "latent_image"
      ],
      "optional": null
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "output",
      "denoised_output"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMAdaptative",
    "display_name": "SamplerDPMAdaptative",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "accept_safety": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.81,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "atol": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0078,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "dcoeff": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "h_init": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.05,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "icoeff": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "order": [
          "INT",
          {
            "tooltip": null,
            "default": 3,
            "max": 3,
            "min": 2
          }
        ],
        "pcoeff": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "rtol": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.05,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "order",
        "rtol",
        "atol",
        "h_init",
        "pcoeff",
        "icoeff",
        "dcoeff",
        "accept_safety",
        "eta",
        "s_noise"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMPP_2M_SDE",
    "display_name": "SamplerDPMPP_2M_SDE",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "solver_type": [
          [
            "midpoint",
            "heun"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "solver_type",
        "eta",
        "s_noise",
        "noise_device"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMPP_2S_Ancestral",
    "display_name": "SamplerDPMPP_2S_Ancestral",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMPP_3M_SDE",
    "display_name": "SamplerDPMPP_3M_SDE",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise",
        "noise_device"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerDPMPP_SDE",
    "display_name": "SamplerDPMPP_SDE",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "noise_device": [
          [
            "gpu",
            "cpu"
          ]
        ],
        "r": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise",
        "r",
        "noise_device"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerEulerAncestral",
    "display_name": "SamplerEulerAncestral",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerEulerAncestralCFGPP",
    "display_name": "SamplerEulerAncestralCFG++",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "eta": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "s_noise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "eta",
        "s_noise"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerLCMUpscale",
    "display_name": "SamplerLCMUpscale",
    "description": "",
    "python_module": "comfy_extras.nodes_advanced_samplers",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "scale_ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 20.0,
            "min": 0.1,
            "step": 0.01
          }
        ],
        "scale_steps": [
          "INT",
          {
            "tooltip": null,
            "default": -1,
            "max": 1000,
            "min": -1,
            "step": 1
          }
        ],
        "upscale_method": [
          [
            "bislerp",
            "nearest-exact",
            "bilinear",
            "area",
            "bicubic"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "scale_ratio",
        "scale_steps",
        "upscale_method"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SamplerLMS",
    "display_name": "SamplerLMS",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/samplers",
    "input": {
      "required": {
        "order": [
          "INT",
          {
            "tooltip": null,
            "default": 4,
            "max": 100,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "order"
      ],
      "optional": null
    },
    "output": [
      "SAMPLER"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SAMPLER"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SaveAnimatedPNG",
    "display_name": "SaveAnimatedPNG",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/animation",
    "input": {
      "required": {
        "compress_level": [
          "INT",
          {
            "tooltip": null,
            "default": 4,
            "max": 9,
            "min": 0
          }
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 6.0,
            "max": 1000.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "images": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "filename_prefix",
        "fps",
        "compress_level"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveAnimatedWEBP",
    "display_name": "SaveAnimatedWEBP",
    "description": "",
    "python_module": "comfy_extras.nodes_images",
    "category": "image/animation",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "ComfyUI"
          }
        ],
        "fps": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 6.0,
            "max": 1000.0,
            "min": 0.01,
            "step": 0.01
          }
        ],
        "images": [
          "IMAGE"
        ],
        "lossless": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "method": [
          [
            "default",
            "fastest",
            "slowest"
          ]
        ],
        "quality": [
          "INT",
          {
            "tooltip": null,
            "default": 80,
            "max": 100,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "filename_prefix",
        "fps",
        "lossless",
        "quality",
        "method"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveAudio",
    "display_name": "SaveAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "audio",
    "input": {
      "required": {
        "audio": [
          "AUDIO"
        ],
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "audio/ComfyUI"
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "audio",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SaveImage",
    "display_name": "Save Image",
    "description": "Saves the input images to your ComfyUI output directory.",
    "python_module": "nodes",
    "category": "image",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes.",
            "default": "ComfyUI"
          }
        ],
        "images": [
          "IMAGE",
          {
            "tooltip": "The images to save."
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "images",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "SetLatentNoiseMask",
    "display_name": "Set Latent Noise Mask",
    "description": "",
    "python_module": "nodes",
    "category": "latent/inpaint",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "samples": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "mask"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SetUnionControlNetType",
    "display_name": "SetUnionControlNetType",
    "description": "",
    "python_module": "comfy_extras.nodes_controlnet",
    "category": "conditioning/controlnet",
    "input": {
      "required": {
        "control_net": [
          "CONTROL_NET"
        ],
        "type": [
          [
            "auto",
            "openpose",
            "depth",
            "hed/pidi/scribble/ted",
            "canny/lineart/anime_lineart/mlsd",
            "normal",
            "segment",
            "tile",
            "repaint"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "control_net",
        "type"
      ],
      "optional": null
    },
    "output": [
      "CONTROL_NET"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONTROL_NET"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SolidMask",
    "display_name": "SolidMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ],
        "value": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 512,
            "max": 16384,
            "min": 1,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "value",
        "width",
        "height"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SplitImageWithAlpha",
    "display_name": "Split Image with Alpha",
    "description": "",
    "python_module": "comfy_extras.nodes_compositing",
    "category": "mask/compositing",
    "input": {
      "required": {
        "image": [
          "IMAGE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image"
      ],
      "optional": null
    },
    "output": [
      "IMAGE",
      "MASK"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "IMAGE",
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SplitSigmas",
    "display_name": "SplitSigmas",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/sigmas",
    "input": {
      "required": {
        "sigmas": [
          "SIGMAS"
        ],
        "step": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 10000,
            "min": 0
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sigmas",
        "step"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "high_sigmas",
      "low_sigmas"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "SplitSigmasDenoise",
    "display_name": "SplitSigmasDenoise",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/sigmas",
    "input": {
      "required": {
        "denoise": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "sigmas": [
          "SIGMAS"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "sigmas",
        "denoise"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS",
      "SIGMAS"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "high_sigmas",
      "low_sigmas"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableCascade_EmptyLatentImage",
    "display_name": "StableCascade_EmptyLatentImage",
    "description": "",
    "python_module": "comfy_extras.nodes_stable_cascade",
    "category": "latent/stable_cascade",
    "input": {
      "required": {
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "compression": [
          "INT",
          {
            "tooltip": null,
            "default": 42,
            "max": 128,
            "min": 4,
            "step": 1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 256,
            "step": 8
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 1024,
            "max": 16384,
            "min": 256,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "width",
        "height",
        "compression",
        "batch_size"
      ],
      "optional": null
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableCascade_StageB_Conditioning",
    "display_name": "StableCascade_StageB_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_stable_cascade",
    "category": "conditioning/stable_cascade",
    "input": {
      "required": {
        "conditioning": [
          "CONDITIONING"
        ],
        "stage_c": [
          "LATENT"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "stage_c"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableCascade_StageC_VAEEncode",
    "display_name": "StableCascade_StageC_VAEEncode",
    "description": "",
    "python_module": "comfy_extras.nodes_stable_cascade",
    "category": "latent/stable_cascade",
    "input": {
      "required": {
        "compression": [
          "INT",
          {
            "tooltip": null,
            "default": 42,
            "max": 128,
            "min": 4,
            "step": 1
          }
        ],
        "image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "vae",
        "compression"
      ],
      "optional": null
    },
    "output": [
      "LATENT",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false
    ],
    "output_name": [
      "stage_c",
      "stage_b"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableZero123_Conditioning",
    "display_name": "StableZero123_Conditioning",
    "description": "",
    "python_module": "comfy_extras.nodes_stable3d",
    "category": "conditioning/3d_models",
    "input": {
      "required": {
        "azimuth": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "elevation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "init_image",
        "vae",
        "width",
        "height",
        "batch_size",
        "elevation",
        "azimuth"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StableZero123_Conditioning_Batched",
    "display_name": "StableZero123_Conditioning_Batched",
    "description": "",
    "python_module": "comfy_extras.nodes_stable3d",
    "category": "conditioning/3d_models",
    "input": {
      "required": {
        "azimuth": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "azimuth_batch_increment": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "batch_size": [
          "INT",
          {
            "tooltip": null,
            "default": 1,
            "max": 4096,
            "min": 1
          }
        ],
        "clip_vision": [
          "CLIP_VISION"
        ],
        "elevation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "elevation_batch_increment": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 180.0,
            "min": -180.0,
            "round": false,
            "step": 0.1
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ],
        "init_image": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 256,
            "max": 16384,
            "min": 16,
            "step": 8
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_vision",
        "init_image",
        "vae",
        "width",
        "height",
        "batch_size",
        "elevation",
        "azimuth",
        "elevation_batch_increment",
        "azimuth_batch_increment"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING",
      "CONDITIONING",
      "LATENT"
    ],
    "output_is_list": [
      false,
      false,
      false
    ],
    "output_name": [
      "positive",
      "negative",
      "latent"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StyleModelApply",
    "display_name": "Apply Style Model",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning/style_model",
    "input": {
      "required": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "conditioning": [
          "CONDITIONING"
        ],
        "style_model": [
          "STYLE_MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "style_model",
        "clip_vision_output"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "StyleModelLoader",
    "display_name": "Load Style Model",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "style_model_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "style_model_name"
      ],
      "optional": null
    },
    "output": [
      "STYLE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "STYLE_MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "ThresholdMask",
    "display_name": "ThresholdMask",
    "description": "",
    "python_module": "comfy_extras.nodes_mask",
    "category": "mask",
    "input": {
      "required": {
        "mask": [
          "MASK"
        ],
        "value": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.5,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "mask",
        "value"
      ],
      "optional": null
    },
    "output": [
      "MASK"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MASK"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "TomePatchModel",
    "display_name": "TomePatchModel",
    "description": "",
    "python_module": "comfy_extras.nodes_tomesd",
    "category": "model_patches/unet",
    "input": {
      "required": {
        "model": [
          "MODEL"
        ],
        "ratio": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.3,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "ratio"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "TripleCLIPLoader",
    "display_name": "TripleCLIPLoader",
    "description": "",
    "python_module": "comfy_extras.nodes_sd3",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "clip_name1": [
          []
        ],
        "clip_name2": [
          []
        ],
        "clip_name3": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "clip_name1",
        "clip_name2",
        "clip_name3"
      ],
      "optional": null
    },
    "output": [
      "CLIP"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CLIP"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "UNETLoader",
    "display_name": "Load Diffusion Model",
    "description": "",
    "python_module": "nodes",
    "category": "advanced/loaders",
    "input": {
      "required": {
        "unet_name": [
          []
        ],
        "weight_dtype": [
          [
            "default",
            "fp8_e4m3fn",
            "fp8_e5m2"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "unet_name",
        "weight_dtype"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "UpscaleModelLoader",
    "display_name": "Load Upscale Model",
    "description": "",
    "python_module": "comfy_extras.nodes_upscale_model",
    "category": "loaders",
    "input": {
      "required": {
        "model_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model_name"
      ],
      "optional": null
    },
    "output": [
      "UPSCALE_MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "UPSCALE_MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEDecode",
    "display_name": "VAE Decode",
    "description": "Decodes latent images back into pixel space images.",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "samples": [
          "LATENT",
          {
            "tooltip": "The latent to be decoded."
          }
        ],
        "vae": [
          "VAE",
          {
            "tooltip": "The VAE model used for decoding the latent."
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "vae"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": [
      "The decoded image."
    ]
  },
  {
    "name": "VAEDecodeAudio",
    "display_name": "VAEDecodeAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "latent/audio",
    "input": {
      "required": {
        "samples": [
          "LATENT"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "samples",
        "vae"
      ],
      "optional": null
    },
    "output": [
      "AUDIO"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "AUDIO"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEEncode",
    "display_name": "VAE Encode",
    "description": "",
    "python_module": "nodes",
    "category": "latent",
    "input": {
      "required": {
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "pixels",
        "vae"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEEncodeAudio",
    "display_name": "VAEEncodeAudio",
    "description": "",
    "python_module": "comfy_extras.nodes_audio",
    "category": "latent/audio",
    "input": {
      "required": {
        "audio": [
          "AUDIO"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "audio",
        "vae"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAEEncodeForInpaint",
    "display_name": "VAE Encode (for Inpainting)",
    "description": "",
    "python_module": "nodes",
    "category": "latent/inpaint",
    "input": {
      "required": {
        "grow_mask_by": [
          "INT",
          {
            "tooltip": null,
            "default": 6,
            "max": 64,
            "min": 0,
            "step": 1
          }
        ],
        "mask": [
          "MASK"
        ],
        "pixels": [
          "IMAGE"
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "pixels",
        "vae",
        "mask",
        "grow_mask_by"
      ],
      "optional": null
    },
    "output": [
      "LATENT"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "LATENT"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAELoader",
    "display_name": "Load VAE",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "vae_name": [
          []
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "vae_name"
      ],
      "optional": null
    },
    "output": [
      "VAE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "VAE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VAESave",
    "display_name": "VAESave",
    "description": "",
    "python_module": "comfy_extras.nodes_model_merging",
    "category": "advanced/model_merging",
    "input": {
      "required": {
        "filename_prefix": [
          "STRING",
          {
            "tooltip": null,
            "default": "vae/ComfyUI_vae"
          }
        ],
        "vae": [
          "VAE"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "vae",
        "filename_prefix"
      ],
      "optional": null
    },
    "output": [],
    "output_is_list": [],
    "output_name": [],
    "output_node": true,
    "output_tooltips": []
  },
  {
    "name": "VPScheduler",
    "display_name": "VPScheduler",
    "description": "",
    "python_module": "comfy_extras.nodes_custom_sampler",
    "category": "sampling/custom_sampling/schedulers",
    "input": {
      "required": {
        "beta_d": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 19.9,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "beta_min": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.1,
            "max": 5000.0,
            "min": 0.0,
            "round": false,
            "step": 0.01
          }
        ],
        "eps_s": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.001,
            "max": 1.0,
            "min": 0.0,
            "round": false,
            "step": 0.0001
          }
        ],
        "steps": [
          "INT",
          {
            "tooltip": null,
            "default": 20,
            "max": 10000,
            "min": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "steps",
        "beta_d",
        "beta_min",
        "eps_s"
      ],
      "optional": null
    },
    "output": [
      "SIGMAS"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "SIGMAS"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VideoLinearCFGGuidance",
    "display_name": "VideoLinearCFGGuidance",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "sampling/video_models",
    "input": {
      "required": {
        "min_cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.5
          }
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "min_cfg"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "VideoTriangleCFGGuidance",
    "display_name": "VideoTriangleCFGGuidance",
    "description": "",
    "python_module": "comfy_extras.nodes_video_model",
    "category": "sampling/video_models",
    "input": {
      "required": {
        "min_cfg": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 100.0,
            "min": 0.0,
            "round": 0.01,
            "step": 0.5
          }
        ],
        "model": [
          "MODEL"
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "model",
        "min_cfg"
      ],
      "optional": null
    },
    "output": [
      "MODEL"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "MODEL"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "WebcamCapture",
    "display_name": "Webcam Capture",
    "description": "",
    "python_module": "comfy_extras.nodes_webcam",
    "category": "image",
    "input": {
      "required": {
        "capture_on_queue": [
          "BOOLEAN",
          {
            "tooltip": null,
            "default": true
          }
        ],
        "height": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ],
        "image": [
          "WEBCAM",
          {
            "tooltip": null
          }
        ],
        "width": [
          "INT",
          {
            "tooltip": null,
            "default": 0,
            "max": 16384,
            "min": 0,
            "step": 1
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "image",
        "width",
        "height",
        "capture_on_queue"
      ],
      "optional": null
    },
    "output": [
      "IMAGE"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "IMAGE"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "unCLIPCheckpointLoader",
    "display_name": "unCLIPCheckpointLoader",
    "description": "",
    "python_module": "nodes",
    "category": "loaders",
    "input": {
      "required": {
        "ckpt_name": [
          [
            "aura_flow_0.2.safetensors",
            "flux1-dev-fp8.safetensors",
            "sd_xl_base_1.0.safetensors",
            "sd_xl_base_1.0_0.9vae.safetensors",
            "sd_xl_turbo_1.0_fp16.safetensors"
          ]
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "ckpt_name"
      ],
      "optional": null
    },
    "output": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "output_is_list": [
      false,
      false,
      false,
      false
    ],
    "output_name": [
      "MODEL",
      "CLIP",
      "VAE",
      "CLIP_VISION"
    ],
    "output_node": false,
    "output_tooltips": []
  },
  {
    "name": "unCLIPConditioning",
    "display_name": "unCLIPConditioning",
    "description": "",
    "python_module": "nodes",
    "category": "conditioning",
    "input": {
      "required": {
        "clip_vision_output": [
          "CLIP_VISION_OUTPUT"
        ],
        "conditioning": [
          "CONDITIONING"
        ],
        "noise_augmentation": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 0.0,
            "max": 1.0,
            "min": 0.0,
            "step": 0.01
          }
        ],
        "strength": [
          "FLOAT",
          {
            "tooltip": null,
            "default": 1.0,
            "max": 10.0,
            "min": -10.0,
            "step": 0.01
          }
        ]
      },
      "optional": null
    },
    "input_order": {
      "required": [
        "conditioning",
        "clip_vision_output",
        "strength",
        "noise_augmentation"
      ],
      "optional": null
    },
    "output": [
      "CONDITIONING"
    ],
    "output_is_list": [
      false
    ],
    "output_name": [
      "CONDITIONING"
    ],
    "output_node": false,
    "output_tooltips": []
  }
]